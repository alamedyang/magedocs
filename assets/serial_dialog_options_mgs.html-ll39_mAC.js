import{_ as s,o as a,c as n,a as e}from"./app-oGoBbKgC.js";const l={},o=e(`<h1 id="serial-dialog-options-mgs" tabindex="-1"><a class="header-anchor" href="#serial-dialog-options-mgs" aria-hidden="true">#</a> Serial Dialog Options (MGS)</h1><p>NOTE: This syntax is used for <a href="../mgs/mgs_natlang">MGS Natlang</a> <a href="../mgs/serial_dialogs_mgs">serial dialogs</a>, not <a href="../dialogs/serial_dialogs_json">JSON serial dialogs</a>.</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">serial dialog</span><span style="color:#9CDCFE;"> sample</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">wrap</span><span style="color:#9CDCFE;"> messages</span><span style="color:#D4D4D4;"> to </span><span style="color:#B5CEA8;">60</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Hey, can anyone hear me? Hello?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">#</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Yes, I can hear you.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleYes</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">#</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;What did you say?&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleNo</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div></div><p>Two choices:</p><h2 id="multiple-choice-numbered-option" tabindex="-1"><a class="header-anchor" href="#multiple-choice-numbered-option" aria-hidden="true">#</a> Multiple Choice (numbered option)</h2><div class="language-text" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;"># $label:quotedString : (goto) (script) $script:string</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div><p>Each <strong>label</strong> will appear as part of a numbered list in the serial console. These labels (and only these) may be <a href="../mgs/serial_styles">styled</a>.</p><p>The player cannot proceed until they enter a valid number, at which point the game will jump to the corresponding script. Failure results in a repeat of the same serial dialog again. That means this type of option will <em>always</em> result in a script jump.</p><details class="custom-container details"><summary>Example</summary><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">exampleScript</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">show</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">serial dialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;You are confronted by three potions!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;Which do you choose to drink?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">#</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;The red one&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">drink-potion-red</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">#</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;The blue one&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">drink-potion-blue</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">#</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Start a barfight to avoid this mess&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">drink-potion-renegade</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div></div></details><h2 id="free-response" tabindex="-1"><a class="header-anchor" href="#free-response" aria-hidden="true">#</a> Free Response</h2><div class="language-text" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">_ $label:quotedString : (goto) (script) $script:string</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div><p>The <strong>label</strong> indicates what the player must type for the game to jump to the indicated script.</p><p>There is no explicit prompt for these options, but upon reaching the free response portion of the serial dialog, the player can type whatever they want into the serial console.</p><p>An invalid response will fall through, i.e. the script will continue executing actions further below. Therefore, only a <em>valid</em> response will result in a script jump.</p><p>The user&#39;s response is case insensitive. (The label <code>&quot;CAT&quot;</code> will match the user input of <code>cat</code>.)</p><details class="custom-container details"><summary>Example</summary><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">exampleScript</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">show</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">serial dialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;When you arrive at the Sphinx,&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;it speaks in a slow, monotone voice:&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;WHEN DO THE FLYING TOASTERS COME OUT?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">_</span><span style="color:#D7BA7D;"> </span><span style="color:#CE9178;">&quot;after dark&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sphinxSuccess</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">_</span><span style="color:#D7BA7D;"> </span><span style="color:#CE9178;">&quot;before dark&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sphinxWTF</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div></div></details><h2 id="behaviors-in-common" tabindex="-1"><a class="header-anchor" href="#behaviors-in-common" aria-hidden="true">#</a> Behaviors in Common</h2><ul><li>A single serial dialog can only use <em>one</em> of these two types. <ul><li>The parser will interpret all options within the block using the type of the first option.</li></ul></li><li>Unlike <a href="../mgs/dialog_options_mgs">dialog options</a>, the option count for serial dialogs is unlimited.</li><li>The <strong>label</strong> <em>must</em> be wrapped in <a href="../mgs/variables/quoted_string">quotes</a>.</li><li>The words <code>goto</code> and <code>script</code> are optional. Any <a href="../mgs/variables/string">string</a> given after the <code>:</code> (other than <code>goto</code> and <code>script</code>) is assumed to be the script name.</li></ul>`,18),p=[o];function t(r,i){return a(),n("div",null,p)}const D=s(l,[["render",t],["__file","serial_dialog_options_mgs.html.vue"]]);export{D as default};
