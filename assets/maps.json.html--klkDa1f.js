import{_ as o,r as n,o as e,c as p,b as l,d as s,e as t,w as r,a as c}from"./app-MrF-XoWp.js";const i={},D=c(`<h1 id="maps-json" tabindex="-1"><a class="header-anchor" href="#maps-json" aria-hidden="true">#</a> <code>maps.json</code></h1><p>Found in <a href="../getting_started/scenario_source_files"><code>scenario_source_files</code></a>.</p><p>This data used to reside (in part) in <a href="../structure/scenario.json"><code>scenario.json</code></a>, but was moved to this file for the ch2+ Mage Game Engine (MGE), partially because of the new <code>directions</code> property, and partially because it was easier to coordinate script names like this.</p><div class="language-json" data-ext="json"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;sample&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;path&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;maps/map-sample.json&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;on_load&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_load-sample&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;on_look&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_look-sample&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;on_tick&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_tick-sample&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;directions&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">&quot;north&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_go-sample-map&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">&quot;south&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_go-sample-map&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p><a href="../maps/map_properties">Map properties</a> will still work if assigned to a <a href="../maps">map</a> file within Tiled, as before, but we&#39;ve found this format easier to work with.</p><h2 id="map-properties" tabindex="-1"><a class="header-anchor" href="#map-properties" aria-hidden="true">#</a> Map Properties</h2>`,6);function u(d,y){const a=n("RouterLink");return e(),p("div",null,[D,l("p",null,[s("See: "),t(a,{to:"/maps/map_properties.html"},{default:r(()=>[s("map properties")]),_:1})])])}const h=o(i,[["render",u],["__file","maps.json.html.vue"]]);export{h as default};
