import{_ as t,o as e,c as o,a}from"./app-MrF-XoWp.js";const s={},c=a('<h1 id="on-tick" tabindex="-1"><a class="header-anchor" href="#on-tick" aria-hidden="true">#</a> <code>on_tick</code></h1><p>See: <a href="../scripts/script_slots">Script Slots</a></p><p><code>on_tick</code> <a href="../scripts">script</a> continuously evaluate every game tick. Once an <code>on_tick</code> script reaches the end of its list of <a href="../actions">actions</a>, the script will return to the beginning of the currently set script and run again on the next game tick.</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>This means that if you <a href="../actions/RUN_SCRIPT">goto</a> the same script you started from as the <code>on_tick</code> script&#39;s last action, the <a href="../scripts/script_slots">script slot</a> will NEVER give up its turn! You probably want to use <a href="../actions/SET_ENTITY_TICK_SCRIPT">SET_ENTITY_TICK_SCRIPT</a> or <a href="../actions/SET_MAP_TICK_SCRIPT">SET_MAP_TICK_SCRIPT</a> instead, which will set the target script for that slot but NOT immediately execute like <a href="../actions/RUN_SCRIPT">RUN_SCRIPT</a> would.</p></div><p>A <a href="../maps">map</a>&#39;s <code>on_tick</code> script slot is a logical place for a script that watches for whether the player enters a <a href="../techniques/doors">doorway</a>, but <code>on_tick</code> scripts are useful for other kinds of watch scripts, too, such as changing an entity&#39;s idle behavior after a condition has been met.</p><p><code>on_tick</code> slots are what you should use if you want to be able to interrupt or abort a script at an arbitrary place or time e.g. with a button press, or when the player crosses a <a href="../maps/vector_objects">collision trigger</a>, etc.</p><p>To terminate an <code>on_tick</code> script, it must <a href="../actions/RUN_SCRIPT">goto</a> <a href="../scripts/null_script">null_script</a> as one of its actions, or another script must tell it to switch to <code>null_script</code>.</p>',7),i=[c];function r(n,h){return e(),o("div",null,i)}const p=t(s,[["render",r],["__file","on_tick.html.vue"]]);export{p as default};
