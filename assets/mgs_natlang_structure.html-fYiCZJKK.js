import{_ as l,r as o,o as t,c as r,b as a,d as c,w as p,e as s,a as n}from"./app-7-tBH-Mq.js";const i={},d=n(`<h1 id="mgs-natlang-structure" tabindex="-1"><a class="header-anchor" href="#mgs-natlang-structure" aria-hidden="true">#</a> MGS Natlang Structure</h1><p>Because <a href="../mgs/mgs_natlang">MGS Natlang</a> is fairly white space agnostic, formatting is flexible.</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// all these are equally valid:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">scriptName</span><span style="color:#D4D4D4;">{</span><span style="color:#569CD6;">show</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">dialog</span><span style="color:#D4D4D4;">{</span><span style="color:#4EC9B0;">Bob</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Hello World!&quot;</span><span style="color:#D4D4D4;">}}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">scriptName</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">show</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">dialog</span><span style="color:#D4D4D4;"> { </span><span style="color:#4EC9B0;">Bob</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Hello World!&quot;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">scriptName</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">show</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">dialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">Bob</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;Hello World!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="basic-structure" tabindex="-1"><a class="header-anchor" href="#basic-structure" aria-hidden="true">#</a> Basic Structure</h2><p>Commonly, Natlang syntax involves declarations followed by matching pairs of brackets:</p><ul><li><a href="../mgs/block">Blocks</a>: <code>BLOCK {}</code></li><li><a href="../mgs/advanced_syntax/macros">Macros</a>: <code>MACRO!()</code></li></ul><p>Free form phrases often have a known size, such as actions within a script block (with limited numbers of possible arrangements) or dialog parameters (which always appear in pairs). In such cases, terminating characters or brackets are not used.</p><p>However, due to an increasing desire for complex syntax parsing, terminating or separating characters being gradually introduced. As of late 2023, this is limited to semicolons (<code>;</code>) being used to mark the end of an action:</p>`,8),D=a("code",null,"ACTION;",-1),h=n('<h2 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> Variables</h2><p>See: <a href="../mgs/variables_mgs">Variables (MGS)</a></p><p>MGS Natlang variables are more strict (and nuanced) than the JSON/JavaScript equivalents. For example, in some cases, a <a href="../mgs/variables/bareword">bareword</a> string may be required when the JSON version might have accepted any type of JS string.</p><p>In all &quot;dictionary&quot; syntax definitions in this documentation, words in parentheses are optional, and words starting with dollar signs are <a href="../mgs/variables_mgs">MGS Natlang variables</a>.</p><h2 id="comments" tabindex="-1"><a class="header-anchor" href="#comments" aria-hidden="true">#</a> Comments</h2><p>See: <a href="../mgs/comments_mgs">Comments (MGS)</a></p>',6);function m(u,g){const e=o("RouterLink");return t(),r("div",null,[d,a("ul",null,[a("li",null,[c(e,{to:"/actions.html"},{default:p(()=>[s("Actions")]),_:1}),s(": "),D])]),h])}const b=l(i,[["render",m],["__file","mgs_natlang_structure.html.vue"]]);export{b as default};
