import{_ as l,r as i,o as r,c as p,b as s,d as e,e as o,w as t,a}from"./app-MrF-XoWp.js";const c={},d=a(`<h1 id="dialog-identifier" tabindex="-1"><a class="header-anchor" href="#dialog-identifier" aria-hidden="true">#</a> Dialog Identifier</h1><p>NOTE: This syntax is used for <a href="../mgs/mgs_natlang">MGS Natlang</a> <a href="../mgs/dialogs_mgs">dialogs</a>, not <a href="../dialogs/dialogs_json">JSON dialogs</a>.</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">dialog</span><span style="color:#9CDCFE;"> sampleDialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">SELF</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">alignment</span><span style="color:#569CD6;"> BOTTOM_RIGHT</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">emote</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">3</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Messages...&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;So many messages!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Don&#39;t you think?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Not really.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleScript1</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Definitely.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleScript2</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line">Â </div><br><br><br><br><br><br><br><br></div></div><p>The <strong>dialog identifier</strong> identifies the &quot;speaker&quot; of the <a href="../mgs/dialog_messages_mgs">Dialog Messages (MGS)</a> that immediately follow. For most cases, this will be a specific entity (with option #1 or #2 below), though you could also build up a dialog from its component pieces instead (with option #3).</p><p>The three options:</p>`,5),g=a('<li><code>$bareword</code><ul><li>The <a href="../mgs/variables_mgs#bareword">bareword</a> identifier refers to a dialog label within a <a href="../mgs/dialog_settings_block">dialog settings block</a>. <ul><li>If no dialog label is found, this is assumed to be an entity name instead. This usage also provides the entity name as an <code>entity</code> <a href="../mgs/dialog_parameters_mgs">parameter</a> for the dialog.</li><li>Entity names with spaces or other special characters are not eligible for this usage.</li></ul></li><li>REMINDER: A <a href="../mgs/variables_mgs#quoted-string">quoted string</a> is NOT allowed here! This string <em>must</em> be a <a href="../mgs/variables_mgs#bareword">bareword</a>!</li></ul></li>',1),h=s("code",null,"entity $string",-1),m=s("li",null,[s("a",{href:"../mgs/variables_mgs#string"},"String"),e(": an entity's given name (i.e. the entity's name within the Tiled map).")],-1),u=s("li",null,[e("This usage also provides the entity name as an "),s("code",null,"entity"),e(),s("a",{href:"../mgs/dialog_parameters_mgs"},"parameter"),e(" for the dialog.")],-1),D=s("code",null,"%PLAYER%",-1),y=s("code",null,"%SELF%",-1),_=s("a",{href:"../mgs/dialog_settings_target_block"},"dialog settings",-1),f=a('<li><code>name $string</code><ul><li><a href="../mgs/variables_mgs#string">String</a>: the dialog&#39;s display name.</li><li>This usage also provides a <code>name</code> <a href="../mgs/dialog_parameters_mgs">parameter</a> for the dialog.</li><li>If you don&#39;t want a name displayed, use an empty quoted string (<code>name &quot;&quot;</code>).</li></ul></li>',1);function b(C,E){const n=i("RouterLink");return r(),p("div",null,[d,s("ol",null,[g,s("li",null,[h,s("ul",null,[m,u,s("li",null,[e("The entities "),o(n,{to:"/entities/relative_references.html#player"},{default:t(()=>[D]),_:1}),e(" and "),o(n,{to:"/entities/relative_references.html#self"},{default:t(()=>[y]),_:1}),e(" must use this pattern (and not the bareword pattern) because they contain special characters. As this can be cumbersome, it's probably best to set up a "),_,e(" label for them so you can use a bareword as an identifier instead.")])])]),f])])}const w=l(c,[["render",b],["__file","dialog_identifier.html.vue"]]);export{w as default};
