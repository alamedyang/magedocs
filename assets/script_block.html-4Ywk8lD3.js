import{_ as s,o as a,c as n,a as l}from"./app-60F4FVZl.js";const o={},p=l(`<h1 id="script-block" tabindex="-1"><a class="header-anchor" href="#script-block" aria-hidden="true">#</a> Script Block</h1><p>To define an <a href="../mgs/mgs_natlang">MGS Natlang</a> <a href="../scripts">script</a>, start a new <a href="../mgs/blocks">block</a> at the root level:</p><div class="language-text" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">script $string {}</span></span>
<span class="line"><span style="color:#D4D4D4;">// or</span></span>
<span class="line"><span style="color:#D4D4D4;">$string {}</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div><p>If the word <code>script</code> is absent, any <a href="../mgs/variables_mgs#string">string</a> (other than <code>dialog</code>, <code>settings</code> etc.) will be interpreted as the script name.</p><p>These blocks must occur on the root level.</p><p><strong>Block contents</strong>: any number of <a href="../actions">actions</a>, <a href="../mgs/advanced_syntax#labels">labels</a>, or <a href="../mgs/blocks#combination-blocks">combination blocks</a> in the order they are to be executed in-game.</p><p>Example:</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">exampleScript</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">mutate</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">count</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  dejavu:</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">play</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">entity</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">Bob</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">animation</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">twice</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">show</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">dialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">Bob</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Eh? What&#39;s that?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">PLAYER</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;I SAID that the goldfish wasn&#39;t there!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;I&#39;ve told you </span><span style="color:#569CD6;">$count$</span><span style="color:#CE9178;"> times now!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">mutate</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">count</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">goto</span><span style="color:#9CDCFE;"> label</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">dejavu</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,8),e=[p];function t(c,r){return a(),n("div",null,e)}const i=s(o,[["render",t],["__file","script_block.html.vue"]]);export{i as default};
