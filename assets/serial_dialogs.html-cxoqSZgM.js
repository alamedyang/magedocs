import{_ as s,r,o as i,c as o,b as a,d as e,e as l,w as n,a as c}from"./app-MrF-XoWp.js";const d={},h=a("h1",{id:"serial-dialogs",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#serial-dialogs","aria-hidden":"true"},"#"),e(" Serial Dialogs")],-1),u=a("strong",null,"Serial dialogs",-1),g=c('<p>They need not function as <a href="../entities">character</a> <a href="../dialogs">dialog</a>, strictly speaking; they can be anything, including <a href="../debug_tools#debug-scripting">debug messages</a>, ASCII maps, room or character descriptions, etc.</p><h2 id="structure" tabindex="-1"><a class="header-anchor" href="#structure" aria-hidden="true">#</a> Structure</h2><p>These are much more simple than ordinary <a href="../dialogs">dialogs</a>, but the JSON structure and the MGS Natlang structure is different:</p><ul><li><a href="../dialogs/serial_dialogs_json">Serial Dialogs (JSON)</a></li><li><a href="../mgs/serial_dialogs_mgs">Serial Dialogs (MGS)</a></li></ul>',4);function _(f,m){const t=r("RouterLink");return i(),o("div",null,[h,a("p",null,[u,e(" are a means to print messages on the serial "),l(t,{to:"/terminal.html"},{default:n(()=>[e("terminal")]),_:1}),e(" (new as of the chapter 2+ version of the MGE).")]),g])}const S=s(d,[["render",_],["__file","serial_dialogs.html.vue"]]);export{S as default};
