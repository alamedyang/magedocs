import{_ as e,o as t,c as a,a as o}from"./app-oyGKrQVR.js";const r={},c=o('<h1 id="cutscenes" tabindex="-1"><a class="header-anchor" href="#cutscenes" aria-hidden="true">#</a> Cutscenes</h1><h3 id="general-tips" tabindex="-1"><a class="header-anchor" href="#general-tips" aria-hidden="true">#</a> General Tips</h3><ul><li>Separate the <a href="../scripts">script</a> for the cutscene itself (unless you want to hide it behind mandatory logic checks somehow).</li><li>Set a &quot;saw the cutscene&quot; <a href="../variables#save-flags">save flag</a> to <code>true</code> at the end of the cutscene so that an accidental (or deliberate) map reload doesn&#39;t cut off the end.</li><li>Multi-segment cutscenes: since you can <a href="../map_loads">reset the map</a> at any point, long cutscenes punctuated by periods of player control may need to use a different save flag for each piece, and then the map&#39;s <a href="../script_slots#on-load"><code>on_load</code></a> (or whatever) may need to check for each piece and make the correct changes (according to which parts of the cutscene have happened). <ul><li>We actually did this for the TUESDAY cutscene in BMG2020. Otherwise, the player would have had to start the (long) cutscene over from scratch if they reset the map partway through â€” and since the &quot;deja vu&quot; book was in that room, there was a good chance of that.</li></ul></li></ul><h3 id="credits-sequence" tabindex="-1"><a class="header-anchor" href="#credits-sequence" aria-hidden="true">#</a> Credits Sequence</h3><p>Traditional game credits can be accomplished with a separate credits <a href="../maps">map</a> and a <a href="../Tilesets">tileset</a> for your credits text.</p><p>In your credit&#39;s <code>on_load</code>, you should probably <a href="../actions/SET_PLAYER_CONTROL">turn off player control</a> (or at least <a href="../actions/SET_HEX_EDITOR_STATE">turn off the hex editor</a>) before anything else happens.</p><p>To scroll the credits, lock the camera to a <a href="../vector_objects">vector path</a> and pan it along the path (or pan it to a destination object). (Camera panning to vector objects currently unimplemented; instead, lock the camera to a <a href="../entity_types#null-entity">null entity</a> and make it do the correct motion.)</p><p>To cut to another credits page, space your text according to the screen size and create vector objects for the camera to teleport between. Optionally, <a href="../actions/SCREEN_FADE_IN">fade in</a> and <a href="../actions/SCREEN_FADE_OUT">out</a> between teleports.</p><p>Don&#39;t forget to <a href="../actions/SET_PLAYER_CONTROL">re-enable player control</a> etc. when the credits are done!</p><p>(Feel free to experiment with other styles of game credits; you need not be bound to traditional cinematic tropes. E.g. some games have a &quot;credits&quot; building featuring characters that correspond to the game&#39;s developers, and who might say a few sentences about what their job was.)</p>',10),n=[c];function s(i,h){return t(),a("div",null,n)}const l=e(r,[["render",s],["__file","Cutscenes.html.vue"]]);export{l as default};
