import{_ as s,r as n,o as i,c as l,b as t,d as e,e as a,w as r,a as d}from"./app-MrF-XoWp.js";const c={},h=t("h1",{id:"mage-folder",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mage-folder","aria-hidden":"true"},"#"),e(),t("code",null,"MAGE"),e(" Folder")],-1),u=t("p",null,[e("There'll be a bunch of stuff in the "),t("code",null,"MAGE/"),e(" folder, but relevant to creating new content are:")],-1),_=t("code",null,"editor/index.html",-1),f=t("code",null,"game.dat",-1),m=t("code",null,"game.dat",-1),g=t("code",null,"game.dat",-1),p=t("code",null,"game.dat",-1),w=t("a",{href:"../hardware/desktop_build"},"desktop build",-1),y=t("code",null,"game.dat",-1),b=d('<p><code>replace_dat_file_with_downloaded.sh</code> — A shell script for grabbing the latest <code>game.dat</code> from your Downloads folder and moving it to your current directory.</p><p><code>regenerate_dat_file.sh</code> — This shell script requires <code>node.js</code> to run (see: <a href="../getting_started/what_youll_need">What You&#39;ll Need</a>). There are two versions of this file depending on which repo you started with, and note that the shell script from the <a href="../getting_started/mge_vm">MGE VM</a> is slightly different.</p><p><a href="../getting_started/scenario_source_files"><code>scenario_source_files</code></a> — This is where your raw game data lives.</p>',3),v=t("code",null,"mage_dat.ksy",-1),j=d('<h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2><ul><li><a href="../getting_started/scenario_source_files"><code>scenario_source_files</code></a><ul><li><a href="../structure/scenario.json"><code>scenario.json</code></a></li><li><a href="../structure/portraits.json"><code>portraits.json</code></a></li><li><a href="../structure/entity_types.json"><code>entity_types.json</code></a></li><li><a href="../structure/maps.json"><code>maps.json</code></a></li></ul></li></ul>',2);function x(T,k){const o=n("RouterLink");return i(),l("div",null,[h,u,t("p",null,[_,e(" — The "),a(o,{to:"/encoder.html#web-encoder"},{default:r(()=>[e("web encoder")]),_:1}),e(". To generate a "),f,e(", you can open this file in a web browser and follow the instructions.")]),t("p",null,[m,e(" — This is the encoded data for your game. If you generated a "),g,e(" using "),a(o,{to:"/encoder.html#web-encoder"},{default:r(()=>[e("web encoder")]),_:1}),e(", you must move the resulting "),p,e(" here for the "),w,e(" to see it; the "),a(o,{to:"/encoder.html#cli_encoder"},{default:r(()=>[e("CLI encoder")]),_:1}),e(", however, will update the "),y,e(" in place.")]),b,t("p",null,[v,e(" — Intended to be used with "),a(o,{to:"/encoder.html#kaitai"},{default:r(()=>[e("Kaitai")]),_:1}),e(". This will help you identify unexpected game state you might be encountering.")]),j])}const V=s(c,[["render",x],["__file","mage_folder.html.vue"]]);export{V as default};
