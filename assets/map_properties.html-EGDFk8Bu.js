import{_ as e,o,c as a,a as t}from"./app-60F4FVZl.js";const i={},r=t('<h1 id="map-properties" tabindex="-1"><a class="header-anchor" href="#map-properties" aria-hidden="true">#</a> Map Properties</h1><p>Map properties reside either inside <a href="mage_folder#maps-json"><code>maps.json</code></a> (preferred) or inside a JSON map file (legacy). (To see the map&#39;s properties within Tiled, go to &quot;Map &gt; Map Properties….&quot;)</p><h2 id="path" tabindex="-1"><a class="header-anchor" href="#path" aria-hidden="true">#</a> <code>path</code></h2><p>Where the map JSON file is located and what it&#39;s called.</p><h2 id="on-load" tabindex="-1"><a class="header-anchor" href="#on-load" aria-hidden="true">#</a> <code>on_load</code></h2><p>The <a href="script_slots#on-load"><code>on_load</code></a> script plays when the map is first loaded. This is best used for checking <a href="variables#save-flags">save flags</a> and restoring state that is meant to be permanently changed.</p><p><code>on_load</code> scripts stop when finished.</p><h2 id="on-tick" tabindex="-1"><a class="header-anchor" href="#on-tick" aria-hidden="true">#</a> <code>on_tick</code></h2><p>The <a href="script_slots#on-tick"><code>on_tick</code></a> script plays every game tick. Best used for door triggers.</p><p><code>on_tick</code> scripts will run once per game tick; they will loop once finished, after allowing other scripts to take a turn.</p><p>Any <a href="entities">entity</a>&#39;s <code>on_tick</code> script is capable of watching for the player&#39;s movement into <a href="techniques/doors">doorways</a>, but it is logical to assign this task to the map&#39;s <code>on_tick</code> script.</p><p>Because the player cannot directly alter which script is run in a map&#39;s <code>on_tick</code> slot like they can an entity&#39;s <code>on_tick</code> slot, actions run in this slot are fairly well protected, as well — useful for doors.</p><h2 id="on-look" tabindex="-1"><a class="header-anchor" href="#on-look" aria-hidden="true">#</a> <code>on_look</code></h2><p>The <a href="script_slots#on-look"><code>on_look</code></a> script plays when you run the <code>look</code> <a href="commands">command</a> in the <a href="terminal">terminal</a> without any arguments.</p><p>NOTE: You can override this script if you <a href="actions/REGISTER_SERIAL_DIALOG_COMMAND_ARGUMENT">register</a> a <code>look</code> command manually.</p><h2 id="directions" tabindex="-1"><a class="header-anchor" href="#directions" aria-hidden="true">#</a> <code>directions</code></h2><p>The scripts that run when the command <code>go</code> is run with the named argument, e.g. <code>go north</code>.</p><p>These directions will be listed after a maps <code>on_look</code> script is triggered (e.g. <code>exits are...</code>). Unfortunately, this results in confusion if you want multiple names per exit, so here you should only include directions you want explicitly printed, and use manual <a href="actions/REGISTER_SERIAL_DIALOG_COMMAND_ARGUMENT">registrations</a> for everything else.</p>',18),s=[r];function n(c,d){return o(),a("div",null,s)}const p=e(i,[["render",n],["__file","map_properties.html.vue"]]);export{p as default};
