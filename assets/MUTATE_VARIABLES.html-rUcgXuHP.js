import{_ as a,o as s,c as n,a as e}from"./app-7-tBH-Mq.js";const l={},o=e(`<h1 id="mutate-variables" tabindex="-1"><a class="header-anchor" href="#mutate-variables" aria-hidden="true">#</a> MUTATE_VARIABLES</h1><p>Manipulate the value of a specific <a href="../scripts/integer_variables">variable</a> by using the value of another variable.</p><p>See <a href="../structure/operations">operations</a>.</p><h2 id="example-json" tabindex="-1"><a class="header-anchor" href="#example-json" aria-hidden="true">#</a> Example JSON</h2><div class="language-json" data-ext="json"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;action&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;MUTATE_VARIABLES&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;operation&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;ADD&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;source&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;otherVar&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;variable&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;varName&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="mgs-natlang" tabindex="-1"><a class="header-anchor" href="#mgs-natlang" aria-hidden="true">#</a> MGS Natlang</h2><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">script</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">mutate</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">varName</span><span style="color:#D4D4D4;"> + </span><span style="color:#CE9178;">otherVar</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="dictionary-entry" tabindex="-1"><a class="header-anchor" href="#dictionary-entry" aria-hidden="true">#</a> Dictionary entry</h3><div class="language-text" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">mutate $variable:string $operation:operator $source:string (;)</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div>`,10),t=[o];function p(r,c){return s(),n("div",null,t)}const D=a(l,[["render",p],["__file","MUTATE_VARIABLES.html.vue"]]);export{D as default};
