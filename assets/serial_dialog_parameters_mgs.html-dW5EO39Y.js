import{_ as s,o as a,c as l,a as e}from"./app-7-tBH-Mq.js";const n={},o=e(`<h1 id="serial-dialog-parameters-mgs" tabindex="-1"><a class="header-anchor" href="#serial-dialog-parameters-mgs" aria-hidden="true">#</a> Serial Dialog Parameters (MGS)</h1><p>NOTE: This syntax is used for <a href="../mgs/mgs_natlang">MGS Natlang</a> <a href="../mgs/serial_dialogs_mgs">serial dialogs</a>, not <a href="../dialogs/serial_dialogs_json">JSON serial dialogs</a>.</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">serial dialog</span><span style="color:#9CDCFE;"> sample</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">wrap</span><span style="color:#9CDCFE;"> messages</span><span style="color:#D4D4D4;"> to </span><span style="color:#B5CEA8;">60</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Hey, can anyone hear me? Hello?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">#</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Yes, I can hear you.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleYes</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">#</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;What did you say?&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleNo</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br></div></div><p>Serial dialog parameters are a <a href="../dialogs/serial_dialog_properties">serial dialog property</a> and value pair. Multiple serial dialog parameters can occur back-to-back in a single <a href="../mgs/serial_dialogs_mgs">MGS Natlang serial dialog</a> or a <a href="../mgs/serial_dialog_settings_block">serial dialog settings block</a>.</p><ul><li><code>wrap (messages) (to) $number</code>. <ul><li><a href="../mgs/variables/number">Number</a>: the number of chars to auto wrap the contents of serial dialog messages.</li><li>80 is default.</li></ul></li></ul><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">serial dialog</span><span style="color:#9CDCFE;"> settings</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">wrap</span><span style="color:#9CDCFE;"> messages</span><span style="color:#D4D4D4;"> to </span><span style="color:#B5CEA8;">60</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br></div></div><p>(Yeah, there&#39;s only one for the moment!)</p>`,7),r=[o];function p(t,i){return a(),l("div",null,r)}const D=s(n,[["render",p],["__file","serial_dialog_parameters_mgs.html.vue"]]);export{D as default};
