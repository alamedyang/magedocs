import{_ as e,o as t,c as a,a as i}from"./app-oGoBbKgC.js";const n={},o=i('<h1 id="character-entity" tabindex="-1"><a class="header-anchor" href="#character-entity" aria-hidden="true">#</a> Character Entity</h1><p>One of the three <a href="../entities/entity_types">entity types</a>.</p><p>If you place a tile from a <a href="../tilesets">tileset</a> onto an object layer in a Tiled <a href="../maps">map</a>, and the <code>Class</code> (formerly <code>Type</code>) property of the tile has been defined in <a href="../structure/entity_types.json"><code>entity_types.json</code></a>, it will become an <strong>character entity</strong>.</p><ul><li><strong><code>PrimaryIdType</code></strong>: <code>2</code> (<code>entity_type</code>)</li><li><strong><code>PrimaryId</code></strong>: the <code>id</code> of the entity within <a href="../structure/entity_types.json"><code>entity_types.json</code></a></li><li><strong><code>SecondaryId</code></strong>: does nothing</li></ul><p>In scripts, you need not manipulate <code>PrimaryId</code> to alter the appearance of a character entity, though there are certainly <a href="../scripts">script</a> that are capable of doing this. Instead, you can use <a href="../actions">actions</a> with the argument <code>entity_type</code>, which is the name (string) of the character entity as defined within <a href="../structure/entity_types.json"><code>entity_types.json</code></a>. (In the entity&#39;s <a href="../tilesets">tileset</a>, this is what the property &quot;Type&quot; is set to.)</p><p>What&#39;s special about character entities is that they can have a number of <a href="../tilesets/animations">animations</a> <a href="../encoder/entity_management_system">assigned</a> to them and they will switch animations automatically depending on context (walking or not, facing north/south/east/west, etc.), as well as having other attributes, like a permanently assigned portrait image. <strong>NPCs will therefore likely be this type.</strong></p><p>In the MGE, character entities will default to their idle animation regardless of whatever specific tile is being used within Tiled. (I.e. if you use a &quot;walking animation&quot; tile for the entity on the Tiled map, the entity will appear to be walking in Tiled, but not within the MGE.)</p><p>Character entities will face the north by default, but if the tile placed has been <a href="../encoder/entity_management_system">assigned to a NSEW direction and a purpose</a>, the entity will instead face the direction associated with that tile.</p>',8),r=[o];function s(c,h){return t(),a("div",null,r)}const l=e(n,[["render",s],["__file","character_entity.html.vue"]]);export{l as default};
