import{_ as s,o as a,c as e,a as l}from"./app-GYgAq86M.js";const n={},o=l(`<h1 id="dialog-settings-target-block" tabindex="-1"><a class="header-anchor" href="#dialog-settings-target-block" aria-hidden="true">#</a> Dialog Settings Target Block</h1><p>One of the <a href="../mgs/blocks">blocks</a> in <a href="../mgs/mgs_natlang">MGS Natlang</a>, occurring exclusively inside <a href="../mgs/dialog_settings_block">dialog settings blocks</a>.</p><p>Several choices:</p><ul><li><code>default {}</code><ul><li>Describes the default behavior for all <a href="../mgs/dialogs_mgs">dialogs</a> in the same file.</li></ul></li><li><code>entity $string {}</code><ul><li>Describes the default dialog settings for a specific <a href="../entities">entity</a>.</li></ul></li><li><code>label $bareword {}</code><ul><li>Defines a dialog identifier shortcut or alias to a specific set of settings.</li><li>The label name <em>must</em> be a <a href="../mgs/variables_mgs#bareword">bareword</a>, not a <a href="../mgs/variables_mgs#quoted-string">quoted string</a>.</li><li>Dialog labels only exist in <a href="../mgs/mgs_natlang">MGS Natlang</a> (not the MGE itself), so they do not apply to other entity references (such as the target of an action).</li></ul></li></ul><p><strong>Block contents</strong>: any number of <a href="../mgs/dialogs_mgs#dialog-parameters">dialog parameters</a> (<a href="../dialogs#properties">dialog property</a> and <a href="../mgs/variables_mgs">value</a> pairs) — in any order. No commas or semicolons needed. (For now!)</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">settings</span><span style="color:#D4D4D4;"> for </span><span style="color:#9CDCFE;">dialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">label</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PLAYER</span><span style="color:#D4D4D4;"> {}</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br></div></div><p>This is a common use case for dialog settings, after which you can use <code>PLAYER</code> instead of <code>entity &quot;%PLAYER%&quot;</code> as a <a href="dialogs_mgs#dialog-identifier">dialog identifier</a> for <a href="../mgs/dialogs_mgs">dialogs</a>.</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// with label</span></span>
<span class="line"><span style="color:#569CD6;">dialog</span><span style="color:#9CDCFE;"> test</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">PLAYER</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Dialog message&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// without label</span></span>
<span class="line"><span style="color:#569CD6;">dialog</span><span style="color:#9CDCFE;"> test</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">entity &quot;</span><span style="color:#569CD6;">%PLAYER%</span><span style="color:#4EC9B0;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Dialog message&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,9),t=[o];function i(r,c){return a(),e("div",null,t)}const g=s(n,[["render",i],["__file","dialog_settings_target_block.html.vue"]]);export{g as default};
