import{_ as e,o as t,c as i,a as o}from"./app-j-XjLWpf.js";const n={},a=o('<h1 id="handlers" tabindex="-1"><a class="header-anchor" href="#handlers" aria-hidden="true">#</a> Handlers</h1><p>(Also see: <a href="../techniques/one_script_multiple_behaviors">One Script, Multiple Behaviors</a>)</p><p>To manage an entity&#39;s complex idle behavior, or to modify an entity&#39;s idle behavior over time, you can use another entity&#39;s <a href="../script_slots#on-tick"><code>on_tick</code></a> <a href="../script_slots">slot</a>. We call this second entity a <strong>handler</strong>, because another entity is handling part of that entity&#39;s behavior.</p><p>It doesn&#39;t matter who the handler is, as long as their <code>on_tick</code> slot is free, but if you change who is acting as handler be sure to change it everywhere or you&#39;ll end up with multiple handlers working against each other!</p><h2 id="example-bender" tabindex="-1"><a class="header-anchor" href="#example-bender" aria-hidden="true">#</a> Example: Bender</h2><p>In BMG2020, Bender has three idle behaviors, so there are three <code>set_handler</code> scripts:</p><ol><li>Bender&#39;s default idle behavior, triggered with <code>set_handler-bender-on</code>: <ul><li>Bender faces the player as the player moves around, and once in a while he plays the &quot;I&#39;ve got my eye on you&quot; animation (while continuing to face the player).</li><li>In Tiled, Bender and his handler have these scripts set to their <code>on_tick</code> slots, so this is their default behavior.</li><li>Scripts: <ul><li>Bender&#39;s <code>on_tick</code> is <code>face-player</code> — a general script that sets the entity&#39;s direction toward the player.</li><li>The handler&#39;s <code>on_tick</code> is <code>handler-bender-timer</code> — which waits a set amount of time, then makes Bender play his action animation.</li></ul></li></ul></li><li>Bender&#39;s idle behavior during conversations, triggered with <code>set_handler-bender-off</code>: <ul><li>The handler no longer makes Bender play the &quot;I&#39;ve got my eye on you&quot; animation. This change in behavior required so that his &quot;bite my shiny metal ass&quot; animation can play without interference.</li><li>Scripts: <ul><li>The handler&#39;s <code>on_tick</code> is <a href="../scripts#null_script">null_script</a></li><li>Bender&#39;s <code>on_tick</code> is <a href="../scripts#null_script">null_script</a></li></ul></li></ul></li><li>Bender&#39;s &quot;satisfied&quot; idle behavior, triggered with <code>set_handler-bender-none</code>: <ul><li>Bender &quot;loiters,&quot; or looks around at his own pace, regardless of the player&#39;s position.</li><li>Because this behavior isn&#39;t complex, it only requires Bender&#39;s own <code>on_tick</code>.</li><li>Scripts: <ul><li>The handler&#39;s <code>on_tick</code> is <a href="../scripts#null_script">null_script</a></li><li>Bender&#39;s <code>on_tick</code> is <code>on_tick-bender-loiter</code> — a script that turns him in certain directions after certain amounts of time.</li></ul></li></ul></li></ol><p>Whenever the player speaks to Bender, his idle behavior must be set to #2 at the very beginning of the conversation, and after the conversation is over, it must be set to #3 or #1 depending on whether his questline was finished or not. This management is done by using <a href="../actions/COPY_SCRIPT">COPY_SCRIPT</a> for the relevant <code>set_handler</code> scripts.</p><p>A handler is required because otherwise Bender could not both turn toward the player AND play his &quot;I&#39;ve got my eye on you&quot; animation <strong>at the same time</strong>. Only the use of a handler makes this kind of complex behavior possible.</p><p>If #2 is triggered when the current idle behavior is #1, Bender&#39;s <code>on_tick</code> need not change, but changing it does no harm. But if #2 is triggered when the current idle behavior is #3, Bender&#39;s <code>on_tick</code> <em>must</em> be changed. It&#39;s always good to design scripts in such a way that they can be used in as many different circumstances as possible (rather than making a series of almost-identical scripts tuned to each possible application).</p>',10),r=[a];function s(l,d){return t(),i("div",null,r)}const c=e(n,[["render",s],["__file","handlers.html.vue"]]);export{c as default};
