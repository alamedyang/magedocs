import{_ as t,o as e,c as i,a}from"./app-7-tBH-Mq.js";const n={},r=a('<h1 id="on-interact" tabindex="-1"><a class="header-anchor" href="#on-interact" aria-hidden="true">#</a> <code>on_interact</code></h1><p>See: <a href="../scripts/script_slots">Script Slots</a></p><p>If the player presses the interact button and the interact hitbox hits another <a href="../entities">entity</a>, that entity&#39;s <code>on_interact</code> <a href="../scripts">script</a> will run. (You can watch this happen with <a href="../debug/vector_view">vector view</a>.)</p><p>Scripts run in the <code>on_interact</code> slot will stop once they reach the end of their list of actions. Very commonly, a <a href="../entities/character_entity">character entity</a>&#39;s <code>on_interact</code> script will be the start script of their <a href="../dialogs">dialog</a> tree.</p><p>If the script in this slot jumps to another script at some point, interacting with that entity again will result in the last-used script being run again, not whatever the original <code>on_interact</code> script was. Therefore, if you wish an entity to begin all interactions with the first script in its interact tree, you must explicitly <a href="../actions/SET_ENTITY_INTERACT_SCRIPT">reset</a> its <code>on_interact</code> script at the end of each of its script <a href="../techniques/beginnings_middles_and_ends">branches</a>.</p>',5),c=[r];function o(s,h){return e(),i("div",null,c)}const l=t(n,[["render",o],["__file","on_interact.html.vue"]]);export{l as default};
