import{_ as e,o as a,c as s,a as l}from"./app-7-tBH-Mq.js";const o={},n=l(`<h1 id="dialog-parameters-mgs" tabindex="-1"><a class="header-anchor" href="#dialog-parameters-mgs" aria-hidden="true">#</a> Dialog Parameters (MGS)</h1><p>NOTE: This syntax is used for <a href="../mgs/mgs_natlang">MGS Natlang</a> <a href="../mgs/dialogs_mgs">dialogs</a>, not <a href="../dialogs/dialogs_json">JSON dialogs</a>.</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">dialog</span><span style="color:#9CDCFE;"> sampleDialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">SELF</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">alignment</span><span style="color:#569CD6;"> BOTTOM_RIGHT</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">emote</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">3</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Messages...&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;So many messages!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Don&#39;t you think?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Not really.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleScript1</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Definitely.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleScript2</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div></div><p>Dialog parameters are a <a href="../dialogs/dialog_properties">dialog property</a> and value pair. Multiple dialog parameters can occur back-to-back in a single <a href="../mgs/dialogs_mgs">dialog</a> or a <a href="../mgs/dialog_settings_target_block">dialog settings target block</a>.</p><ul><li><code>entity $string</code><ul><li><a href="../mgs/variables/string">String</a>: the &quot;given name&quot; of the entity (i.e. the entity&#39;s name on the Tiled map). (Wrapping this name in <code>%</code>s is unnecessary and will in fact confuse the MGE encoder.) <ul><li>Can be <a href="../entities/PLAYER"><code>%PLAYER%</code></a> or <a href="../entities/SELF"><code>%SELF%</code></a>.</li></ul></li><li>A dialog can inherit a <code>name</code> and a <code>portrait</code> if given an <code>entity</code> parameter.</li><li>The inherited <code>name</code> is a relative reference; the dialog display name will be whatever that entity&#39;s name is at that moment.</li></ul></li><li><code>name $string</code><ul><li><a href="../mgs/variables/string">String</a>: a fixed string of no more than 12 ASCII characters. For an <a href="../scripts/printing_current_values">entity&#39;s current name</a> instead, wrap a specific entity&#39;s given name in <code>%</code>s. <ul><li>Can be <a href="../entities/PLAYER"><code>%PLAYER%</code></a> or <a href="../entities/SELF"><code>%SELF%</code></a>.</li></ul></li><li>Overrides names inherited via the <code>entity</code> parameter.</li><li>If this string is empty (<code>name &quot;&quot;</code>), the dialog box label will be absent entirely. (Sometimes you want this!)</li></ul></li><li><code>portrait $string</code><ul><li><a href="../mgs/variables/string">String</a>: the name of a MGE portrait.</li><li>Overrides portraits inherited via the <code>entity</code> parameter.</li></ul></li><li><code>alignment $string</code><ul><li><a href="../mgs/variables/string">String</a>: one of the following: <ul><li><code>TR</code> (or <code>TOP_RIGHT</code>)</li><li><code>BR</code> (or <code>BOTTOM_RIGHT</code>)</li><li><code>TL</code> (or <code>TOP_LEFT</code>)</li><li><code>BL</code> (or <code>BOTTOM_LEFT</code>) (default)</li></ul></li></ul></li><li><code>border_tileset $string</code><ul><li><a href="../mgs/variables/string">String</a>: the name of a MGE tileset.</li><li>The default tileset is used if none is provided.</li></ul></li><li><code>emote $number</code><ul><li><a href="../mgs/variables/number">Number</a>: the id of the &quot;emote&quot; in that entity&#39;s entry in <code>portraits.json</code>.</li><li>The default emote (<code>0</code>) will display if not specified.</li></ul></li><li><code>wrap messages (to) $number</code><ul><li><a href="../mgs/variables/number">Number</a>: the number of chars to auto wrap the contents of dialog messages.</li><li>42 is default.</li></ul></li></ul>`,5),i=[n];function t(r,c){return a(),s("div",null,i)}const d=e(o,[["render",t],["__file","dialog_parameters_mgs.html.vue"]]);export{d as default};
