import{_ as n,r as i,o as d,c as h,b as a,d as e,e as s,w as o,a as r}from"./app-MrF-XoWp.js";const c={},l=r('<h1 id="map-loads" tabindex="-1"><a class="header-anchor" href="#map-loads" aria-hidden="true">#</a> Map Loads</h1><p>The first map listed in <a href="../structure/maps.json"><code>maps.json</code></a> is the map the game will load when first turned on. If you want the game to start on a different map (perhaps skipping an intro <a href="../techniques/cutscenes">cutscene</a> the player has seen before), you should handle this logic checking on the <a href="../maps">maps</a>&#39; <a href="../scripts/on_load"><code>on_load</code></a> <a href="../scripts">script</a>, and <a href="../actions/LOAD_MAP">load a different map</a> as appropriate.</p><p>Maps can be assigned an <code>on_load</code> script, which will run once when a map is loaded.</p><h2 id="to-reload-the-current-map" tabindex="-1"><a class="header-anchor" href="#to-reload-the-current-map" aria-hidden="true">#</a> To Reload the Current Map</h2>',4),p=a("code",null,"XOR",-1),m=a("code",null,"MEM1",-1),u=a("code",null,"F1",-1),_=a("code",null,"F6",-1),f=a("li",null,[e("Soft reset current map: "),a("code",null,"XOR"),e(" + "),a("code",null,"MEM3"),e(" (or "),a("code",null,"F1"),e(" + "),a("code",null,"F8"),e(" on desktop)")],-1),g=a("li",null,[e("Target the current map with "),a("a",{href:"../actions/LOAD_MAP"},"LOAD_MAP")],-1),b=r('<h2 id="game-state" tabindex="-1"><a class="header-anchor" href="#game-state" aria-hidden="true">#</a> Game State</h2><h3 id="preserved" tabindex="-1"><a class="header-anchor" href="#preserved" aria-hidden="true">#</a> Preserved</h3><p><a href="../scripts/save_data">Save data</a>, including the player name, persists between map loads, but no other entity state is preserved.</p><h3 id="not-preserved" tabindex="-1"><a class="header-anchor" href="#not-preserved" aria-hidden="true">#</a> Not Preserved</h3><p>All <a href="../entities">entity</a> state is wiped apart from the player name. This includes every entity&#39;s appearance, <a href="../scripts/script_slots">script slots</a> (both their script assignments and their progress within their scripts), and location.</p>',5),v=a("a",{href:"../actions/COPY_SCRIPT"},"COPY_SCRIPT",-1),w=a("a",{href:"../techniques/map_initialization_scripts"},"map initialization script",-1);function x(y,M){const t=i("RouterLink");return d(),h("div",null,[l,a("ul",null,[a("li",null,[e("Toggle "),s(t,{to:"/debug_tools.html#debug-mode"},{default:o(()=>[e("debug mode")]),_:1}),e(": "),p,e(" + "),m,e(" (or "),u,e(" + "),_,e(" on desktop)")]),f,g]),b,a("p",null,[e("All "),s(t,{to:"/terminal.html"},{default:o(()=>[e("terminal")]),_:1}),e(),s(t,{to:"/commands.html"},{default:o(()=>[e("commands")]),_:1}),e(" are reset. For a command that needs to persist throughout the game, you must initialize them afresh at the beginning of the map load. (We recommend using "),v,e(" on a separate "),w,e(" so that such logic checks can be shared between all relevant maps.)")])])}const P=n(c,[["render",x],["__file","map_loads.html.vue"]]);export{P as default};
