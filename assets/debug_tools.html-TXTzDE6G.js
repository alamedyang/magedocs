import{_ as e,o as a,c as o,a as t}from"./app-7-tBH-Mq.js";const r={},i=t('<h1 id="debug-tools" tabindex="-1"><a class="header-anchor" href="#debug-tools" aria-hidden="true">#</a> Debug Tools</h1><p>There are several debug modes available to a game while it&#39;s running:</p><ul><li><a href="../debug/vector_view">Vector view</a> — see the <a href="../maps/vector_objects">vector objects</a> you&#39;re using on the <a href="../maps">map</a></li><li><a href="../debug/debug_mode">Debug mode</a> — enable addition <a href="../entities">entities</a>, logging, or other <a href="../scripts">scripting</a> behavior</li><li><a href="../hardware/hex_editor">Hex editor</a> — hey, don&#39;t forget the game has a built-in hex editor!</li></ul><p>A few tools for the web:</p><ul><li><a href="../debug/mge_encoder_console">MGE encoder console</a> — output printed by the <a href="../encoder/web_encoder">web encoder</a> or the <a href="../encoder/cli_encoder">CLI encoder</a></li><li><a href="../debug/inspecting_with_the_web_encoder">Inspecting with the web encoder</a> — inspect via JavaScript console the WIP data the <a href="../encoder/web_encoder">web encoder</a> is collecting and processing</li><li><a href="../debug/kaitai">Kaitai</a> — a binary data analysis tool (free)</li></ul>',5),n=[i];function c(d,s){return a(),o("div",null,n)}const h=e(r,[["render",c],["__file","debug_tools.html.vue"]]);export{h as default};
