import{_ as o,r as i,o as r,c,b as e,d as s,e as l,w as n,a as t}from"./app-MrF-XoWp.js";const p={},d=t(`<h1 id="dialog-parameters-mgs" tabindex="-1"><a class="header-anchor" href="#dialog-parameters-mgs" aria-hidden="true">#</a> Dialog Parameters (MGS)</h1><p>NOTE: This syntax is used for <a href="../mgs/mgs_natlang">MGS Natlang</a> <a href="../mgs/dialogs_mgs">dialogs</a>, not <a href="../dialogs/dialogs_json">JSON dialogs</a>.</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">dialog</span><span style="color:#9CDCFE;"> sampleDialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">SELF</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">alignment</span><span style="color:#569CD6;"> BOTTOM_RIGHT</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">emote</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">3</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Messages...&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;So many messages!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&quot;Don&#39;t you think?&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Not really.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleScript1</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;Definitely.&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">goto </span><span style="color:#9CDCFE;">script </span><span style="color:#DCDCAA;">sampleScript2</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div></div><p>Dialog parameters are a <a href="../dialogs/dialog_properties">dialog property</a> and value pair. Multiple dialog parameters can occur back-to-back in a single <a href="../mgs/dialogs_mgs">dialog</a> or a <a href="../mgs/dialog_settings_target_block">dialog settings target block</a>.</p>`,4),g=e("code",null,"entity $string",-1),u=e("a",{href:"../mgs/variables_mgs#string"},"String",-1),h=e("code",null,"%",-1),m=e("code",null,"%PLAYER%",-1),_=e("code",null,"%SELF%",-1),D=e("li",null,[s("A dialog can inherit a "),e("code",null,"name"),s(" and a "),e("code",null,"portrait"),s(" if given an "),e("code",null,"entity"),s(" parameter.")],-1),y=e("li",null,[s("The inherited "),e("code",null,"name"),s(" is a relative reference; the dialog display name will be whatever that entity's name is at that moment.")],-1),f=e("code",null,"name $string",-1),C=e("a",{href:"../mgs/variables_mgs#string"},"String",-1),b=e("a",{href:"../scripts/printing_current_values"},"entity's current name",-1),v=e("code",null,"%",-1),E=e("code",null,"%PLAYER%",-1),T=e("code",null,"%SELF%",-1),S=e("li",null,[s("Overrides names inherited via the "),e("code",null,"entity"),s(" parameter.")],-1),k=e("li",null,[s("If this string is empty ("),e("code",null,'name ""'),s("), the dialog box label will be absent entirely. (Sometimes you want this!)")],-1),q=t('<li><code>portrait $string</code><ul><li><a href="../mgs/variables_mgs#string">String</a>: the name of a MGE portrait.</li><li>Overrides portraits inherited via the <code>entity</code> parameter.</li></ul></li><li><code>alignment $string</code><ul><li><a href="../mgs/variables_mgs#string">String</a>: one of the following: <ul><li><code>TR</code> (or <code>TOP_RIGHT</code>)</li><li><code>BR</code> (or <code>BOTTOM_RIGHT</code>)</li><li><code>TL</code> (or <code>TOP_LEFT</code>)</li><li><code>BL</code> (or <code>BOTTOM_LEFT</code>) (default)</li></ul></li></ul></li><li><code>border_tileset $string</code><ul><li><a href="../mgs/variables_mgs#string">String</a>: the name of a MGE tileset.</li><li>The default tileset is used if none is provided.</li></ul></li><li><code>emote $number</code><ul><li><a href="../variables_mgs#number">Number</a>: the id of the &quot;emote&quot; in that entity&#39;s entry in <code>portraits.json</code>.</li><li>The default emote (<code>0</code>) will display if not specified.</li></ul></li><li><code>wrap messages (to) $number</code><ul><li><a href="../mgs/variables_mgs#number">Number</a>: the number of chars to auto wrap the contents of dialog messages.</li><li>42 is default.</li></ul></li>',5);function w(O,x){const a=i("RouterLink");return r(),c("div",null,[d,e("ul",null,[e("li",null,[g,e("ul",null,[e("li",null,[u,s(`: the "given name" of the entity (i.e. the entity's name on the Tiled map). (Wrapping this name in `),h,s("s is unnecessary and will in fact confuse the MGE encoder.) "),e("ul",null,[e("li",null,[s("Can be "),l(a,{to:"/entities/relative_references.html#player"},{default:n(()=>[m]),_:1}),s(" or "),l(a,{to:"/entities/relative_references.html#self"},{default:n(()=>[_]),_:1}),s(".")])])]),D,y])]),e("li",null,[f,e("ul",null,[e("li",null,[C,s(": a fixed string of no more than 12 ASCII characters. For an "),b,s(" instead, wrap a specific entity's given name in "),v,s("s. "),e("ul",null,[e("li",null,[s("Can be "),l(a,{to:"/entities/relative_references.html#player"},{default:n(()=>[E]),_:1}),s(" or "),l(a,{to:"/entities/relative_references.html#self"},{default:n(()=>[T]),_:1}),s(".")])])]),S,k])]),q])])}const L=o(p,[["render",w],["__file","dialog_parameters_mgs.html.vue"]]);export{L as default};
