import{_ as a,o as s,c as e,a as n}from"./app-oGoBbKgC.js";const l={},o=n(`<h1 id="show-serial-dialog-block" tabindex="-1"><a class="header-anchor" href="#show-serial-dialog-block" aria-hidden="true">#</a> Show Serial Dialog Block</h1><p>A <a href="../mgs/combination_block">combination</a> of the action <a href="../actions/SHOW_SERIAL_DIALOG">SHOW_SERIAL_DIALOG</a> and a <a href="../mgs/serial_dialog_block">serial dialog block</a>:</p><div class="language-text" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">show serial dialog $serialDialogName:string {}</span></span>
<span class="line"><span style="color:#D4D4D4;">// or</span></span>
<span class="line"><span style="color:#D4D4D4;">show serial dialog {}</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div><p>Inside the curly braces may be any number of <a href="../mgs/serial_dialogs_mgs">serial dialog</a>.</p><p>This block can be defined with or without a serial dialog name (whatever is given for <a href="../mgs/variables/string">string</a>). Providing a name means other scripts are able to refer to that serial dialog, too, but this is rarely necessary. When a serial dialog name isn&#39;t given, one is generated based on the file name and line number.</p><p>Both patterns are valid anywhere <a href="../actions">actions</a> are allowed (i.e. inside <a href="../mgs/script_block">script blocks</a>).</p><div class="language-mgs" data-ext="mgs"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">exampleScript</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">show</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">serial dialog</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;Bootup sequence completed!&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,7),i=[o];function r(t,c){return s(),e("div",null,i)}const d=a(l,[["render",r],["__file","show_serial_dialog_block.html.vue"]]);export{d as default};
