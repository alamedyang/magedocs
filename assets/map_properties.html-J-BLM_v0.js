import{_ as s,o as a,c as o,a as e}from"./app-GYgAq86M.js";const n={},t=e(`<h1 id="map-properties" tabindex="-1"><a class="header-anchor" href="#map-properties" aria-hidden="true">#</a> Map Properties</h1><p>Map properties reside either inside <a href="mage_folder#maps-json"><code>maps.json</code></a> (preferred) or inside a JSON map file (legacy). (To see the map&#39;s properties within Tiled, go to &quot;Map &gt; Map Properties….&quot;)</p><p>Example <code>maps.json</code>:</p><div class="language-json" data-ext="json"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;sample1&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;path&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;maps/map-sample1.json&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;on_load&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_load-sample&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;on_look&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_look-sample&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;on_tick&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_tick-sample&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;directions&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">&quot;north&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_go-sample-map&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">&quot;south&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;on_go-sample-map&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;sample2&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;path&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;maps/map-sample2.json&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="path" tabindex="-1"><a class="header-anchor" href="#path" aria-hidden="true">#</a> <code>path</code></h2><p>Where the map JSON file is located and what it&#39;s called.</p><h2 id="on-load" tabindex="-1"><a class="header-anchor" href="#on-load" aria-hidden="true">#</a> <code>on_load</code></h2><p>The <a href="script_slots#on-load"><code>on_load</code></a> script plays when the map is first loaded, and will only run once.</p><p>This is best used for checking <a href="variables#save-flags">save flags</a> and restoring state that is meant to be permanently changed.</p><h2 id="on-tick" tabindex="-1"><a class="header-anchor" href="#on-tick" aria-hidden="true">#</a> <code>on_tick</code></h2><p>The <a href="script_slots#on-tick"><code>on_tick</code></a> script will execute, allow all other scripts to take a turn, and then execute again on the next game tick.</p><p>Because the player cannot use the <a href="hex_editor">hex editor</a> to directly alter which script is run in a map&#39;s <code>on_tick</code> slot like they can an entity&#39;s <code>on_tick</code> slot, this slot is fairly well protected — useful for doors.</p><h2 id="on-look" tabindex="-1"><a class="header-anchor" href="#on-look" aria-hidden="true">#</a> <code>on_look</code></h2><p>The <a href="script_slots#on-look"><code>on_look</code></a> script plays when you run the <code>look</code> <a href="commands">command</a> in the <a href="terminal">terminal</a> without any arguments.</p><p>NOTE: You can override this script if you <a href="actions/REGISTER_SERIAL_DIALOG_COMMAND_ARGUMENT">register</a> a <code>look</code> command manually.</p><h2 id="directions" tabindex="-1"><a class="header-anchor" href="#directions" aria-hidden="true">#</a> <code>directions</code></h2><p>These scripts run when the command <code>go</code> is run with the named argument, e.g. <code>go north</code>.</p><p>These directions will be listed after a maps <code>on_look</code> script is triggered (e.g. <code>exits are...</code>). Unfortunately, this can result in confusion if you want multiple names per exit (e.g. <code>go north</code> and <code>go tunnel</code>), so here you should only include directions you want explicitly printed, and use manual <a href="actions/REGISTER_SERIAL_DIALOG_COMMAND_ARGUMENT">registrations</a> for everything else.</p>`,18),l=[t];function p(c,r){return a(),o("div",null,l)}const d=s(n,[["render",p],["__file","map_properties.html.vue"]]);export{d as default};
