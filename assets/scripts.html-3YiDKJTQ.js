import{_ as n,r as l,o,c,b as e,d as t,e as i,w as a,a as r}from"./app-MrF-XoWp.js";const h={},d=r('<h1 id="scripts" tabindex="-1"><a class="header-anchor" href="#scripts" aria-hidden="true">#</a> Scripts</h1><p>A <strong>script</strong> is an array of <a href="actions">actions</a> which will execute one after the other, top to bottom, when the script is run.</p><p>It doesn&#39;t strictly matter which file contains which script data, as long as the file is of the right type (either JSON or <a href="mgs/mgs_natlang">MGS Natlang</a>). Scripts therefore must have completely unique names, even if they are inside different script files, or are in different types of script files.</p><h2 id="relative-references" tabindex="-1"><a class="header-anchor" href="#relative-references" aria-hidden="true">#</a> Relative References</h2>',4),p=e("code",null,"%SELF%",-1),_=e("code",null,"%PLAYER%",-1),f=r('<div class="custom-container tip"><p class="custom-container-title">Best Practice: `%SELF%` or the entity&#39;s given name?</p><p>Scripts involving only one entity (or one entity and the player) will do best to use <code>%SELF%</code>. For <a href="techniques/cutscenes">cutscenes</a> involving multiple characters, however, you might want to specify the entity specifically (by its given name) in case you have to change which entity is running the script.</p></div><h2 id="also-see" tabindex="-1"><a class="header-anchor" href="#also-see" aria-hidden="true">#</a> Also See</h2>',2),u=r('<li><a href="scripts/script_slots">Script Slots</a><ul><li><a href="scripts/on_interact"><code>on_interact</code></a></li><li><a href="scripts/on_tick"><code>on_tick</code></a></li><li><a href="scripts/on_load"><code>on_load</code></a></li><li><a href="scripts/on_look"><code>on_look</code></a></li></ul></li><li><a href="scripts/null_script">null_script</a></li>',2),m=e("li",null,[e("a",{href:"scripts/variables#warp-state"},"warp_state")],-1),v=e("li",null,[e("a",{href:"scripts/printing_current_values"},"Printing Current Values")],-1),g=e("li",null,[e("a",{href:"scripts/scripts_json"},"Scripts (JSON)")],-1),y=e("li",null,[e("a",{href:"mgs/script_block"},"Script Block"),t(" ("),e("a",{href:"mgs/mgs_natlang"},"MGS Natlang"),t(")")],-1),S=e("li",null,[e("a",{href:"Actions"},"Actions")],-1);function b(w,k){const s=l("RouterLink");return o(),c("div",null,[d,e("p",null,[t("See: "),i(s,{to:"/entities/relative_references.html"},{default:a(()=>[t("Relative Entity References")]),_:1})]),e("p",null,[t("For all actions, "),i(s,{to:"/entities/relative_references.html#self"},{default:a(()=>[p]),_:1}),t(" refers to the entity running the script and "),i(s,{to:"/entities/relative_references.html#player"},{default:a(()=>[_]),_:1}),t(" refers to the player entity.")]),f,e("ul",null,[u,e("li",null,[i(s,{to:"/scripts/variables.html"},{default:a(()=>[t("Variable Types")]),_:1}),e("ul",null,[m,e("li",null,[i(s,{to:"/scripts/variables.html#integer-variables"},{default:a(()=>[t("Integer Variables")]),_:1})]),e("li",null,[i(s,{to:"/scripts/variables.html#save-flags"},{default:a(()=>[t("Save Flags")]),_:1})]),v])]),e("li",null,[i(s,{to:"/comments.html"},{default:a(()=>[t("Comments")]),_:1})]),g,y,S])])}const N=n(h,[["render",b],["__file","scripts.html.vue"]]);export{N as default};
