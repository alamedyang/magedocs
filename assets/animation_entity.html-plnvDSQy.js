import{_ as e,o as t,c as i,a}from"./app-7-tBH-Mq.js";const o={},n=a('<h1 id="animation-entity" tabindex="-1"><a class="header-anchor" href="#animation-entity" aria-hidden="true">#</a> Animation Entity</h1><p>One of the three <a href="../entities/entity_types">entity types</a>.</p><p>If you place a animated tile from a <a href="../tilesets">tileset</a> onto an object layer in a Tiled <a href="../maps">map</a>, it will become an <strong>animation entity</strong>.</p><div class="custom-container tip"><p class="custom-container-title">NOTE</p><p>If the tile&#39;s <code>Class</code> (formerly <code>Type</code>) property is something defined within <a href="../structure/entity_types.json"><code>entity_types.json</code></a>, it will instead become a <a href="../entities/character_entity">character entity</a>.</p></div><ul><li><strong><code>PrimaryIdType</code></strong>: <code>1</code> (<code>animation</code>)</li><li><strong><code>PrimaryId</code></strong>: the <code>id</code> of the animation the entity is playing</li><li><strong><code>SecondaryId</code></strong>: does nothing</li></ul><p>When the game is <a href="../encoder/mge_encoder">encoded</a>, all animations are basically shoved together into a single list, so the <code>id</code> for <code>PrimaryId</code> is fairly subject to change at the whim of the encoder. Therefore, you will probably never want to use the <code>PrimaryId</code> to choose a specific animation â€” instead you will place the desired animation tile from a tileset onto a map with Tiled.</p><p>Animation entities are most useful for animated props, e.g. a water fountain, a torch flickering on a wall, a birthday cake with a moving candle flame. Such entities need not use any of the <a href="../entities/entity_properties">entity properties</a> available to them, though they could.</p><p>While NPCs will likely need to be character entities, simpler ones might work perfectly well as animation entities, e.g. WOPR in the BMG2020.</p>',8),r=[n];function s(c,l){return t(),i("div",null,r)}const h=e(o,[["render",s],["__file","animation_entity.html.vue"]]);export{h as default};
