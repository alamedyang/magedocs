import{_ as s,o as a,c as n,a as o}from"./app-oGoBbKgC.js";const e={},l=o(`<h1 id="scenario-json" tabindex="-1"><a class="header-anchor" href="#scenario-json" aria-hidden="true">#</a> <code>scenario.json</code></h1><p>Found in <a href="../getting_started/scenario_source_files"><code>scenario_source_files</code></a>.</p><p>This file tells the <a href="../encoder/mge_encoder">MGE encoder</a> which JSON files it should be encoding. It will look something like this:</p><div class="language-json" data-ext="json"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;scriptPaths&quot;</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;scripts/script-example-1.json&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;scripts/script-example-2.json&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;dialogPaths&quot;</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;dialog/dialog-example.json&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;dialog/dialog-definitely-an-example.json&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;dialog/dialog-examples-for-days.json&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;serialDialogPaths&quot;</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;serial_dialog/serial_dialog-example.json&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;dialogSkins&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;default&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;tilesets/tileset-dialog_moon.json&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;codec&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;tilesets/tileset-dialog_codec.json&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;menu&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;tilesets/tileset-dialog_transparent_menu.json&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p><code>scriptPaths</code>, <code>dialogPaths</code>, and <code>serialDialogPaths</code> contain arrays (square brackets). Each array will simply contain a list of all file paths you want the game encoder to see.</p><p><code>maps</code> and <code>dialogSkins</code> contain object literals (curly braces), which contain name-value pairs. For those object literals, the &quot;name&quot; is the name of the map/dialogSkin for an action to use, and the &quot;value&quot; is the file path for the appropriate JSON file.</p><p>A <code>dialogSkin</code> called <code>default</code> is mandatory.</p><p>Note that the entirety of the contents of <code>scenario.json</code> is enclosed in curly braces.</p><h2 id="mgs-files" tabindex="-1"><a class="header-anchor" href="#mgs-files" aria-hidden="true">#</a> MGS Files</h2><p><a href="../mgs/mgs_natlang">MGS files</a> need not be declared like this. Simply put them somewhere within the <code>scenario_source_files</code> folder.</p>`,10),t=[l];function p(c,i){return a(),n("div",null,t)}const D=s(e,[["render",p],["__file","scenario.json.html.vue"]]);export{D as default};
