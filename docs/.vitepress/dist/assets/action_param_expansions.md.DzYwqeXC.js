import{_ as i,c as a,o as n,ah as t}from"./chunks/framework.l_r_SdPt.js";const o=JSON.parse('{"title":"Action Param Expansions","description":"","frontmatter":{},"headers":[],"relativePath":"action_param_expansions.md","filePath":"action_param_expansions.md"}'),h={name:"action_param_expansions.md"};function l(p,s,e,k,r,D){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="action-param-expansions" tabindex="-1">Action Param Expansions <a class="header-anchor" href="#action-param-expansions" aria-label="Permalink to “Action Param Expansions”">​</a></h1><p>For <a href="./actions.html">action phrases</a>, multiple params may be put into a single param &quot;slot&quot; by wrapping it in brackets. Such params are comma-separated.</p><p>There are two applications for this:</p><h2 id="spreading" tabindex="-1">Spreading <a class="header-anchor" href="#spreading" aria-label="Permalink to “Spreading”">​</a></h2><p>By default, param expansions are spread into multiple instances of that action. If there are multiple expansions in the same action phrase, the nth item of each expansion is chosen for each nth spread.</p><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">script </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">before</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">	entity</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> [</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">Bob</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">Alice</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">] </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">on_tick</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = [</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">null_script</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">watch_player</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">];</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000;">// becomes</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">	</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">script </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">	entity</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> Bob</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> on_tick</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">null_script</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">	entity</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> Alice</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> on_tick</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">watch_player</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><h2 id="rand-macro" tabindex="-1">Rand Macro <a class="header-anchor" href="#rand-macro" aria-label="Permalink to “Rand Macro”">​</a></h2><p>If inside a <code>rand!()</code> macro, the actions inside the rand block are arranged so that a single parameter is chosen at random when the game is run. If there are multiple expansions inside the same <code>rand!()</code> block, then the same nth value is chosen for that random roll.</p><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">script </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">before</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">	rand!</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">(</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">		entity</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> [</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">Bob</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">, </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">Alice</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">] </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">on_tick</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">null_script</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">		wait</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> [</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">10ms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">, </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">2000ms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">];</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">	)</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000;">// becomes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">script </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">after</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">__TEMP_0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">RNG</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">(</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">, =</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">	if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">__TEMP_0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> == </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">) {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">		entity</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> Bob</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> on_tick</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">null_script</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">		wait</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;"> 10ms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">	} </span><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">else if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">__TEMP_0</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> == </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">) {</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">		entity</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> Alice</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> on_tick</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">null_script</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">		wait</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;"> 2000ms</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">	}</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><h2 id="expansion-rules" tabindex="-1">Expansion Rules <a class="header-anchor" href="#expansion-rules" aria-label="Permalink to “Expansion Rules”">​</a></h2><ul><li>All expansions within the same unit (a single action phrase, or a single <code>rand!()</code> block) must contain the same quantity of items.</li><li>Expansion items need not be the same type. <ul><li>E.g. <code>[var_name, flag_name] = [10, true];</code></li></ul></li><li>The param &quot;chunk&quot; that is allowed to be expanded varies per phrase. <ul><li>E.g. for <code>[camera, entity Bob position] = geometry stick;</code>, it is the &quot;movable&quot; in the LHS that can be expanded, not the entity name.</li></ul></li></ul>`,11)])])}const g=i(h,[["render",l]]);export{o as __pageData,g as default};
