import{_ as i,c as a,o as n,ah as t}from"./chunks/framework.l_r_SdPt.js";const c=JSON.parse('{"title":"Constants","description":"","frontmatter":{},"headers":[],"relativePath":"constants.md","filePath":"constants.md"}'),e={name:"constants.md"};function l(h,s,p,r,k,o){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="constants" tabindex="-1">Constants <a class="header-anchor" href="#constants" aria-label="Permalink to “Constants”">​</a></h1><h2 id="constant-definition" tabindex="-1">Constant Definition <a class="header-anchor" href="#constant-definition" aria-label="Permalink to “Constant Definition”">​</a></h2><p><strong>Syntax</strong>: <code>&lt;constant&gt; = &lt;value: any primitive&gt;;</code></p><ul><li>Constants are compile-time constants (as opposed to runtime constants).</li><li><a href="./syntax_scopes.html#file-scope">File scope</a>. (Cannot be redefined or used before definition).</li><li>Define at <a href="./syntax_scopes.html#syntax-contexts">root level of file</a>, use anywhere.</li><li><strong>Value</strong> must be a number, string, or boolean (see <a href="./primitive_types.html">primitive_types</a>), and only a single token.</li></ul><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#4FC1FF;--shiki-light:#0070C1;">$trombones</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">76</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#4FC1FF;--shiki-light:#0070C1;">$steamed_hams</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">&quot;hamburgers&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#4FC1FF;--shiki-light:#0070C1;">$quick_debug</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">true</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span></code></pre></div><h2 id="use" tabindex="-1">Use <a class="header-anchor" href="#use" aria-label="Permalink to “Use”">​</a></h2><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#6A9955;--shiki-light:#008000;">//example</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4FC1FF;--shiki-light:#0070C1;">$total_rounds</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">7</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">play_game</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">	do_turn</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">()</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">	round_count</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> += </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">1</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">	if</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> (</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">round_count</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> &gt;= </span><span style="--shiki-dark:#4FC1FF;--shiki-light:#0070C1;">$total_rounds</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">) {</span></span>
<span class="line"><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">		win_cutscene</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">()</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">	}</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><p>In the example above, <code>$total_rounds</code> has been extracted to a constant so that the &quot;magic number&quot; 7 isn&#39;t buried deep in game logic, and can be adjusted easily. This is especially important if multiple pieces of logic need to consult the same value.</p><h2 id="vs-integer-variable" tabindex="-1">Vs Integer Variable <a class="header-anchor" href="#vs-integer-variable" aria-label="Permalink to “Vs Integer Variable”">​</a></h2><ul><li>Constants are <a href="./syntax_scopes.html#file-scope">File scope</a>, and <a href="./state.html#integer-variables">integer variables</a> are <a href="./syntax_scopes.html#project-scope">Project scope</a>.</li><li>Constants are meant to prevent magic numbers, and not meant to maintain their identity in the final game output.</li></ul>`,10)])])}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
