import{_ as t,c as a,o as i,ah as o}from"./chunks/framework.l_r_SdPt.js";const m=JSON.parse('{"title":"Cutscenes","description":"","frontmatter":{},"headers":[],"relativePath":"cutscenes.md","filePath":"cutscenes.md"}'),r={name:"cutscenes.md"};function s(n,e,c,l,h,p){return i(),a("div",null,[...e[0]||(e[0]=[o('<h1 id="cutscenes" tabindex="-1">Cutscenes <a class="header-anchor" href="#cutscenes" aria-label="Permalink to “Cutscenes”">​</a></h1><p>A cutscene is a cinematic or storytelling sequence, often involving:</p><ul><li>Camera moves <ul><li><a href="./actions.html#position-over-time">Pan camera over time</a></li><li>Make cuts by <a href="./actions.html#position-assignment">teleporting the camera</a> to a different <a href="./vector_objects.html">spot</a> or <a href="./actions.html#load-map">load a new map</a></li><li><a href="./actions.html#fade-camera-in-or-out">Fade camera in or out</a> from black or arbitrary colors</li></ul></li><li>Dialog <ul><li><a href="./actions.html#show-dialog">Show dialog cards</a></li></ul></li><li>Entity choreography <ul><li><a href="./actions.html#play-entity-animation">Play back animations</a></li><li><a href="./actions.html#assign-direction-value">Turn entities toward things</a> or <a href="./actions.html#change-int-value">give them an arbitrary turn</a></li><li><a href="./actions.html#position-assignment">Teleport an entity</a> to a <a href="./vector_objects.html">position</a> on the <a href="./maps.html">map</a></li><li><a href="./actions.html#position-over-time">Make entities walk along a path</a></li><li><a href="./actors.html">Disguise an entity as another</a></li></ul></li><li>Setting <a href="./state.html#save-flags">flags</a><ul><li>When the player acquires an item</li><li>When the player first sees or hears something, like a character&#39;s backstory</li><li>When the player reaches certain cutscene checkpoints</li></ul></li></ul><h3 id="general-tips" tabindex="-1">General Tips <a class="header-anchor" href="#general-tips" aria-label="Permalink to “General Tips”">​</a></h3><ul><li>Separate the <a href="./scripts.html">script</a> for the choreography itself to make the parent script easier to read and the sequence easy to trigger easily when debugging it. <ul><li>If you want to protect the script from arbitrary playback (since players can change the value of entity <a href="./scripts.html#script-slots">script slots</a> with the <a href="./hex_editor.html">hex editor</a>), either lock it behind logic checks within the same script or abstract it with <a href="./fns.html">fns</a> instead of <a href="./actions.html#copy-script">Copy Script</a>.</li></ul></li><li>Multi-segment cutscenes: since you can <a href="./maps.html#map-loads">reset the map</a> at any point, long cutscenes punctuated by periods of player control may need to use a different save flag for each piece. The map&#39;s <code>on_load</code> (or whatever) can then to check for each piece and make the correct changes according to which parts of the cutscene have happened. <ul><li>We did this for the TUESDAY cutscene in BMG2020. Otherwise, the player would have had to start the (long) cutscene over from scratch if they reset the map partway through — and since the &quot;deja vu&quot; book was in that room, there was a good chance of that.</li></ul></li></ul><h3 id="credits-sequence" tabindex="-1">Credits Sequence <a class="header-anchor" href="#credits-sequence" aria-label="Permalink to “Credits Sequence”">​</a></h3><p>Traditional game credits can be accomplished with a separate credits <a href="./maps.html">map</a> and a <a href="./tilesets.html">tileset</a> for your credits text.</p><p>In your credit&#39;s <code>on_load</code>, you should probably disable (or at least turn off the hex editor) before anything else happens. See <a href="./actions.html#assign-bool-value">Assign Bool Value</a>.</p><p>To scroll the credits, lock the camera to a <a href="./vector_objects.html">vector path</a> and pan it along the path (or pan it to a destination object). (Camera panning to vector objects currently unimplemented (?); instead, lock the camera to a <a href="./entity_types.html#null-entity">null entity</a> and make it do the correct motion.)</p><p>To cut to another credits page, space your text according to the screen size and create vector objects for the camera to teleport between.</p><p>Don&#39;t forget to re-enable player control etc. when the credits are done/</p><p>Feel free to experiment with other styles of game credits; you need not be bound to traditional cinematic tropes. E.g. some games have a &quot;credits&quot; building featuring characters that correspond to the game&#39;s developers, and who might say a few sentences about what their job was.</p>',12)])])}const u=t(r,[["render",s]]);export{m as __pageData,u as default};
