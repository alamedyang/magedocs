import{_ as i,c as t,o as a,ah as o}from"./chunks/framework.l_r_SdPt.js";const g=JSON.parse('{"title":"Identifiers","description":"","frontmatter":{},"headers":[],"relativePath":"identifiers.md","filePath":"identifiers.md"}'),r={name:"identifiers.md"};function l(d,e,s,n,c,h){return a(),t("div",null,[...e[0]||(e[0]=[o('<h1 id="identifiers" tabindex="-1">Identifiers <a class="header-anchor" href="#identifiers" aria-label="Permalink to “Identifiers”">​</a></h1><p>An identifier is a string that refers to another data structure, e.g. a variable name or script name. These are generally strings you choose yourself, as opposed to language keywords (<code>if</code>, <code>while</code>, <code>camera</code>, <code>debug_mode</code>, etc.).</p><h2 id="sigils" tabindex="-1">Sigils <a class="header-anchor" href="#sigils" aria-label="Permalink to “Sigils”">​</a></h2><p>Sigils are used when context cannot disambiguate the context of a string. For strings that need sigils, the sigil plus the string make up the identifier, e.g. the entity identifier <code>entity Bob</code>.</p><p>Example multi-word identifiers:</p><ul><li><code>entity Bob</code></li><li><code>geometry door</code></li><li><code>map town</code></li><li><code>button MEM0</code></li></ul><p>All categories of identifiers are different namespaces. E.g. a <a href="./scripts.html">script</a> and a <a href="./dialogs.html">dialog</a> may have the same name. This is why sigils are necessary.</p><h2 id="vs-strings" tabindex="-1">Vs Strings <a class="header-anchor" href="#vs-strings" aria-label="Permalink to “Vs Strings”">​</a></h2><p>Unlike in most other languages, identifiers and strings are not distinguished by <a href="./primitive_types.html">token type</a>; most languages use quoted strings for string values, and barewords for identifiers.</p><ul><li>Barewords can often be used for string values, e.g. <code>entity Bob</code> instead of <code>entity &quot;Bob&quot;</code>.</li><li>Similarly, quoted strings are allowed as single-word identifiers in all cases, e.g. <code>&quot;variable name&quot; = 100;</code></li><li>Keywords are not allowed as bareword string values, such as bare script names or variable names, e.g. <code>if = 10;</code>. There are two fixes: <ul><li>Wrap the identifier in quotes so it&#39;s no longer a bareword, e.g. <code>&quot;if&quot; = true;</code>.</li><li>Add a sigil if you can, e.g. <code>flag if = true;</code>.</li></ul></li></ul><h2 id="identifier-categories" tabindex="-1">Identifier Categories <a class="header-anchor" href="#identifier-categories" aria-label="Permalink to “Identifier Categories”">​</a></h2><p>These are also the sigils used for associated string values.</p><ul><li><code>alias</code></li><li><code>array</code></li><li><code>command</code></li><li><code>dialog</code></li><li><code>entity</code> (see <a href="#entity-identifier">below</a>)</li><li><code>flag</code>: Sigil is optional, but may help tell <a href="./expressions_and_operators.html">bool and int expressions</a> apart</li><li><code>geometry</code> (see <a href="#geometry-identifier">below</a>)</li><li><code>map</code></li><li><code>script</code>: Sigil optional, and it is recommended to omit it</li><li><code>serial_dialog</code></li><li><code>variable</code>: Cannot be used with a sigil</li></ul><h3 id="entity-identifier" tabindex="-1">Entity Identifier <a class="header-anchor" href="#entity-identifier" aria-label="Permalink to “Entity Identifier”">​</a></h3><p>Note: the shorthands <code>player</code> and <code>self</code> are only valid as params inside <a href="./actions.html">action phrases</a>, and are not valid for <a href="./dialogs.html">dialogs</a> (e.g. for a <a href="./dialogs.html#dialog-identifier">dialog identifier</a>) or <a href="./dialog_and_serial_dialog_settings.html">dialog or serial dialog settings</a>.</p><ul><li><code>entity &lt;name: string&gt;</code><ul><li>The named entity</li></ul></li><li><code>player</code><ul><li>The player entity</li><li>Short for <code>entity &quot;%PLAYER%&quot;</code></li></ul></li><li><code>self</code><ul><li>The entity running the current script</li><li>Short for <code>entity &quot;%SELF%&quot;</code></li></ul></li></ul><h3 id="geometry-identifier" tabindex="-1">Geometry Identifier <a class="header-anchor" href="#geometry-identifier" aria-label="Permalink to “Geometry Identifier”">​</a></h3><ul><li><code>geometry &lt;name: string&gt;</code><ul><li>The named geometry</li></ul></li><li><code>entity_path</code><ul><li>The assigned path of the <code>self</code> entity</li><li>Short for <code>entity &quot;%ENTITY_PATH%&quot;</code></li></ul></li></ul>',18)])])}const u=i(r,[["render",l]]);export{g as __pageData,u as default};
