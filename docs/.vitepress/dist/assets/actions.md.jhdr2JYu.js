import{_ as i,c as t,o as a,ah as o}from"./chunks/framework.l_r_SdPt.js";const p=JSON.parse('{"title":"Actions","description":"","frontmatter":{},"headers":[],"relativePath":"actions.md","filePath":"actions.md"}'),l={name:"actions.md"};function n(r,e,s,d,c,h){return a(),t("div",null,[...e[0]||(e[0]=[o('<h1 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-label="Permalink to “Actions”">​</a></h1><ul><li><strong>Bytecode action</strong>: a single bytecode instruction. These are the basic scripting unit of the Mage Game Engine.</li><li><strong>Action phrase</strong>: a phrase of multiple words or sub-patterns that produce one or more bytecode instructions when compiled. <ul><li>Action phrases are used inside a script block.</li><li>They must end with a semicolon.</li></ul></li></ul><p>For dictionary entry syntax information, see: <a href="./jargon_and_syntax.html">Jargon and Syntax</a> and <a href="./primitive_types.html">Primitive Types</a>.</p><h2 id="game-control" tabindex="-1">Game Control <a class="header-anchor" href="#game-control" aria-label="Permalink to “Game Control”">​</a></h2><h3 id="save-slot" tabindex="-1">Save slot <a class="header-anchor" href="#save-slot" aria-label="Permalink to “Save slot”">​</a></h3><p>Saves the current <a href="./state.html#save-data">save data</a> into the last-loaded save slot.</p><p>It is not possible to write save data into an arbitrary slots, nor is it possible to copy data from one save slot into another.</p><ul><li><strong>Syntax</strong>: <code>save slot;</code></li><li><strong>Bytecode action</strong>: <code>SLOT_SAVE</code></li></ul><h3 id="load-slot" tabindex="-1">Load Slot <a class="header-anchor" href="#load-slot" aria-label="Permalink to “Load Slot”">​</a></h3><p>Brings the <a href="./state.html#save-data">save data</a> associated with that slot into RAM.</p><ul><li><strong>Syntax</strong>: <code>load slot &lt;number[]&gt;;</code></li><li><strong>Bytecode action</strong>: <code>SLOT_LOAD</code></li></ul><h3 id="erase-slot" tabindex="-1">Erase Slot <a class="header-anchor" href="#erase-slot" aria-label="Permalink to “Erase Slot”">​</a></h3><p>Clears all the <a href="./state.html#save-data">save data</a> in the given slot.</p><p>This action creates a dialog card reporting that the save was erased. This introduces a player-timed barrier which prevents ROM burnout in the event that a player set an an <code>on_tick</code> script to one that contains this action.</p><ul><li><strong>Syntax</strong>: <code>erase slot &lt;number[]&gt;;</code></li><li><strong>Bytecode action</strong>: `SLOT_ERASE</li></ul><h3 id="non-blocking-delay" tabindex="-1">Non-Blocking Delay <a class="header-anchor" href="#non-blocking-delay" aria-label="Permalink to “Non-Blocking Delay”">​</a></h3><p>This pauses the current <a href="./scripts.html">script</a> while allowing all other aspects of the game to continue unimpeded.</p><p>Use this if you want to pad the actions an <a href="./entities.html">entity</a> is performing so they don&#39;t all occur on the same game tick.</p><p>For cinematic cutscenes, you will almost certainly need to disable player control before using this action, otherwise the player will be able to walk away in the middle. (Don&#39;t forget to turn it on again when finished.)</p><ul><li><strong>Syntax</strong>: `wait &lt;duration[]&gt;;</li><li><strong>Bytecode action</strong>: <code>NON_BLOCKING_DELAY</code></li></ul><h3 id="blocking-delay" tabindex="-1">Blocking Delay <a class="header-anchor" href="#blocking-delay" aria-label="Permalink to “Blocking Delay”">​</a></h3><p>This pauses the entire game, including all other scripts and animations, for the given duration. As this might make the game appear broken, you should probably use a <a href="#nonblocking-delay-instead-syntax-block-duration-bytecode-action-blocking-delay-load-mapfor-most-normal-door-behavior-you-will-probably-want-to-set-the-statewarp-state-string">Warp State String</a> before using the this action.</p><p>See <a href="./maps.html#map-loads">Map Loads</a> for information on what state is reset upon map load.</p><ul><li><strong>Syntax</strong>: <code>load map &lt;map name: string[]&gt;;</code></li><li><strong>Bytecode action</strong>: <code>LOAD_MAP</code></li></ul><h2 id="dialogs-management" tabindex="-1">Dialogs Management <a class="header-anchor" href="#dialogs-management" aria-label="Permalink to “Dialogs Management”">​</a></h2><h3 id="show-dialog" tabindex="-1">Show Dialog <a class="header-anchor" href="#show-dialog" aria-label="Permalink to “Show Dialog”">​</a></h3><p>Plays the named <a href="./dialogs.html">dialog</a>. While a dialog card is showing, the player can only advance to the next dialog message or choose a <a href="./dialogs.html#dialog-option">multiple choice option</a> within that dialog (if any); the player cannot hack, interact with another <a href="./entities.html">entity</a>, move, etc.</p><p>Dialogs may be defined in place with a <a href="./dialogs.html#dialog-literal">dialog literal</a>.</p><p>Note that the dialog reference can either be a dialog literal OR an <a href="./action_param_expansions.html">expandable string</a>, not both.</p><ul><li><strong>Syntax</strong>: <ul><li><code>show dialog &lt;dialog name: string[]&gt;;</code></li><li><code>show dialog &lt;dialog literal&gt;;</code></li></ul></li><li><strong>Bytecode action</strong>: <code>SHOW_DIALOG</code></li></ul><h3 id="close-dialog" tabindex="-1">Close Dialog <a class="header-anchor" href="#close-dialog" aria-label="Permalink to “Close Dialog”">​</a></h3><p>Ends any open <a href="./dialogs.html">dialog</a>.</p><p>Use this action when you want to trigger a dialog that may potentially interrupt a dialog in progress. Otherwise, the two dialogs may collide, which can result in a soft lock.</p><ul><li><strong>Syntax</strong>: <code>close dialog;</code></li><li><strong>Bytecode action</strong>: <code>CLOSE_DIALOG</code></li></ul><h3 id="show-serial-dialog" tabindex="-1">Show Serial Dialog <a class="header-anchor" href="#show-serial-dialog" aria-label="Permalink to “Show Serial Dialog”">​</a></h3><p>Outputs the named <a href="./serial_dialogs.html#serial-dialog">serial dialog</a> to a connected serial console.</p><p>Using this action, each serial dialog message will get a newline added to the end. (To avoid this, use the concat variant.)</p><p>Dialogs may be defined in place with a <a href="./serial_dialogs.html#serial-dialog-literal">serial dialog literal</a>.</p><p>Note that the serial dialog reference can either be a serial dialog literal OR an <a href="./action_param_expansions.html">expandable string</a>, not both.</p><ul><li><strong>Syntax</strong>: <ul><li><code>show serial_dialog &lt;serial dialog name: string[]&gt;;</code></li><li><code>show serial_dialog &lt;serial dialog literal&gt;;</code></li></ul></li><li><strong>Bytecode action</strong>: <code>SHOW_SERIAL_DIALOG</code></li></ul><h3 id="concat-serial-dialog" tabindex="-1">Concat Serial Dialog <a class="header-anchor" href="#concat-serial-dialog" aria-label="Permalink to “Concat Serial Dialog”">​</a></h3><p>Like <a href="#show-serial-dialog-in-every-way-except-the-these-serial-dialogs-will-not-be-printed-with-a-newline-at-the-end-this-is-the-only-way-to-build-up-singleline-strings-from-multiple-pieces-syntax-concat-serial-dialog-serial-dialog-name-string-concat-serial-dialog-serial-dialog-literal-bytecode-action-show-serial-dialog-close-serial-dialogends-any-serial-dialogs">serial dialog</a> that is awaiting user input.</p><ul><li><strong>Syntax</strong>: <code>close serial_dialog;</code></li><li><strong>Bytecode action</strong>: <code>CLOSE_SERIAL_DIALOG</code></li></ul><h2 id="script-control" tabindex="-1">Script Control <a class="header-anchor" href="#script-control" aria-label="Permalink to “Script Control”">​</a></h2><h3 id="run-script" tabindex="-1">Run Script <a class="header-anchor" href="#run-script" aria-label="Permalink to “Run Script”">​</a></h3><p>Immediately switches the current script slot to the named <a href="./scripts.html">script</a>, which begins execution immediately.</p><p>If you want to replace the script in the current slot without immediately executing it, you should use a slot assignment action instead.</p><ul><li><strong>Syntax</strong>: <code>goto &lt;&quot;script&quot;?&gt; &lt;script name: string[]&gt;</code></li><li><strong>Bytecode action</strong>: <code>RUN_SCRIPT</code></li></ul><h3 id="pause-or-unpause-script-slot" tabindex="-1">Pause or Unpause Script Slot <a class="header-anchor" href="#pause-or-unpause-script-slot" aria-label="Permalink to “Pause or Unpause Script Slot”">​</a></h3><p>Pauses or unpauses a <a href="./scripts.html">script</a>. This is most useful for temporarily pausing an <a href="./entities.html">entity</a>&#39;s <code>on_tick</code> script during an <code>on_interact</code> event.</p><ul><li><strong>Syntax</strong>: <ul><li><code>pause &lt;entity or map identifier[]&gt; &lt;script slot: string[]&gt;;</code></li><li><code>unpause &lt;entity or map identifier[]&gt; &lt;script slot: string[]&gt;;</code></li><li><strong>Entity or map identifier</strong>: <ul><li><code>map</code></li><li><strong>Entity identifier</strong>: see <a href="./identifiers.html#entity-identifier">Entity identifier</a></li></ul></li><li><strong>Script slot</strong>: <ul><li>For entities: <code>on_tick</code>, <code>on_interact</code>, <code>on_look</code></li><li>For maps: <code>on_load</code>, <code>on_tick</code>, <code>on_command</code></li></ul></li></ul></li><li><strong>Bytecode action</strong>: <code>SET_SCRIPT_PAUSE</code></li></ul><h3 id="jump-to-action-index" tabindex="-1">Jump to Action Index <a class="header-anchor" href="#jump-to-action-index" aria-label="Permalink to “Jump to Action Index”">​</a></h3><p>Jumps to the nth bytecode instruction in the currently-executing <a href="./scripts.html">script</a>. As these indices are practically impossible to know ahead of time, using this action is not recommended. Instead, use label index jumps.</p><ul><li><strong>Syntax</strong>: <code>goto index &lt;number[]&gt;;</code></li><li><strong>Bytecode action</strong>: <code>GOTO_ACTION_INDEX</code></li></ul><h3 id="jump-to-label" tabindex="-1">Jump to Label <a class="header-anchor" href="#jump-to-label" aria-label="Permalink to “Jump to Label”">​</a></h3><p>Jumps to the named label in the currently-executing <a href="./scripts.html">script</a>.</p><ul><li><strong>Syntax</strong>: `goto index &lt;number[]&gt;;</li><li><strong>Bytecode action</strong>: n/a <ul><li>The old encoder used <code>GOTO_ACTION_INDEX</code> but with a string value instead of a number for the param <code>action_index</code>.</li></ul></li></ul><h3 id="copy-script" tabindex="-1">Copy Script <a class="header-anchor" href="#copy-script" aria-label="Permalink to “Copy Script”">​</a></h3><p>See: <a href="./macros.html#copy-script">Macros &gt; Copy Script</a></p><ul><li><strong>Bytecode action</strong>: <code>COPY_SCRIPT</code></li></ul><h2 id="position-assignment" tabindex="-1">Position Assignment <a class="header-anchor" href="#position-assignment" aria-label="Permalink to “Position Assignment”">​</a></h2><p>This action phrase instantly teleports a &quot;movable&quot; to a &quot;coordinate.&quot;</p><ul><li><strong>Syntax:</strong> <code>&lt;movable[] = &lt;coordinate[]&gt;;</code></li><li><strong>Bytecode actions</strong>: <ul><li><code>TELEPORT_ENTITY_TO_GEOMETRY</code></li><li><code>SET_CAMERA_TO_FOLLOW_ENTITY</code></li><li><code>TELEPORT_CAMERA_TO_GEOMETRY</code></li></ul></li></ul><h3 id="movable-assignment" tabindex="-1">Movable (Assignment) <a class="header-anchor" href="#movable-assignment" aria-label="Permalink to “Movable (Assignment)”">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>camera</code></li><li><code>&lt;entity identifier&gt;</code> (See <a href="./identifiers.html#entity-identifier">Entity Identifier</a>)</li></ul></li></ul><h3 id="coordinate-assignment" tabindex="-1">Coordinate (Assignment) <a class="header-anchor" href="#coordinate-assignment" aria-label="Permalink to “Coordinate (Assignment)”">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>&lt;entity identifier&gt; position</code> (See <a href="./identifiers.html#entity-identifier">Entity Identifier</a>)</li><li><code>&lt;geometry identifier&gt;</code> (See <a href="./identifiers.html#geometry-identifier">Geometry Identifier)</a></li></ul></li></ul><h2 id="position-over-time" tabindex="-1">Position Over Time <a class="header-anchor" href="#position-over-time" aria-label="Permalink to “Position Over Time”">​</a></h2><p>This action phrase moves a &quot;movable&quot; to a &quot;coordinate&quot; over time.</p><ul><li><strong>Syntax:</strong> <code>&lt;movable[] -&gt; &lt;coordinate[]&gt; over &lt;duration[]&gt; &lt;&quot;forever&quot;?&gt;;</code></li><li><strong>Bytecode actions</strong>: <ul><li><code>WALK_ENTITY_TO_GEOMETRY</code></li><li><code>WALK_ENTITY_ALONG_GEOMETRY</code></li><li><code>LOOP_ENTITY_ALONG_GEOMETRY</code></li><li><code>PAN_CAMERA_TO_ENTITY</code></li><li><code>PAN_CAMERA_TO_GEOMETRY</code></li><li><code>PAN_CAMERA_ALONG_GEOMETRY</code></li><li><code>LOOP_CAMERA_ALONG_GEOMETRY</code></li></ul></li></ul><h3 id="movable-over-time" tabindex="-1">Movable (Over Time) <a class="header-anchor" href="#movable-over-time" aria-label="Permalink to “Movable (Over Time)”">​</a></h3><p>Same as in the action phrase <a href="#movable-assignment">Position Assignment</a>.</p><h3 id="coordinate-over-time" tabindex="-1">Coordinate (Over Time) <a class="header-anchor" href="#coordinate-over-time" aria-label="Permalink to “Coordinate (Over Time)”">​</a></h3><p>Coordinates for this action phrase need to have the <code>origin</code> or <code>length</code> specified, as walking over time to a polygon&#39;s origin is not the same as walking along a polygon&#39;s length. See <a href="./vector_objects.html#vector-origins">Vector Origins</a>.</p><ul><li><strong>Syntax</strong>: <ul><li><code>&lt;entity identifier&gt; position</code> (See <a href="./identifiers.html#entity-identifier">Entity Identifier</a>)</li><li><code>entity_path &lt;&quot;origin&quot; OR &quot;length&quot;&gt;</code></li><li><code>&lt;geometry identifier&gt; &lt;&quot;origin&quot; OR &quot;length&quot;&gt;</code> (See <a href="./identifiers.html#geometry-identifier">Geometry Identifier</a>)</li></ul></li></ul><h3 id="forever" tabindex="-1">Forever <a class="header-anchor" href="#forever" aria-label="Permalink to “Forever”">​</a></h3><p><code>forever</code> is optional.</p><ul><li><code>forever</code> cannot be used with: <ul><li>Entities as the destination coordinate.</li><li><code>origin</code> (i.e. single points) as the destination coordinate.</li></ul></li><li>If <code>forever</code> is used, then the script will loop this action forever, and will not execute any further items.</li></ul><h2 id="choreography" tabindex="-1">Choreography <a class="header-anchor" href="#choreography" aria-label="Permalink to “Choreography”">​</a></h2><p>See <a href="#assign-direction-value">Assign Direction Value</a>.</p><h3 id="play-entity-animation" tabindex="-1">Play Entity Animation <a class="header-anchor" href="#play-entity-animation" aria-label="Permalink to “Play Entity Animation”">​</a></h3><p>The <a href="./entities.html">entity</a> will play the given animation the given number of times, then will return to the default animation for the entity&#39;s movement status (standing, walking).</p><p>No other script items will execute in that script until the animation count is fulfilled.</p><p>If an entity is compelled to move around on the map, it will abort this animation playback.</p><p>To change an entity&#39;s animation indefinitely, use the <a href="#assign-int-value-action-phrase-for-the-entitys-current-animation-property-syntax-entity-identifier-animation-animation-number-play-count-quantity-entity-identifier-see-identifiersentity-identifier">Entity Identifier</a> - <strong>Animation</strong>: the nth animation defined in <code>entity_types.json</code> for the entity&#39;s type.</p><ul><li><strong>Bytecode action</strong>: <code>PLAY_ENTITY_ANIMATION</code></li></ul><h3 id="fade-camera-in-or-out" tabindex="-1">Fade Camera In or Out <a class="header-anchor" href="#fade-camera-in-or-out" aria-label="Permalink to “Fade Camera In or Out”">​</a></h3><p>Transitions the screen from (or to) the specified color. Fades are slow on the real hardware, so use sparingly.</p><ul><li><strong>Syntax</strong>: <ul><li><code>camera fade in -&gt; &lt;color[]&gt; over &lt;duration[]&gt;;</code></li><li>`camera fade out -&gt; &lt;color[]&gt; over &lt;duration[]&gt;;</li></ul></li><li><strong>Bytecode actions</strong>: <ul><li><code>SCREEN_FADE_IN</code></li><li><code>SCREEN_FADE_OUT</code></li></ul></li></ul><h3 id="shake-camera" tabindex="-1">Shake Camera <a class="header-anchor" href="#shake-camera" aria-label="Permalink to “Shake Camera”">​</a></h3><p>Shakes the camera a certain distance (<code>amplitude</code>) at a certain speed (<code>frequency</code>) and for a certain length of time (<code>duration</code>)</p><ul><li><strong>Syntax</strong>: <code>camera shake -&gt; &lt;frequency: duration[]&gt; &lt;amplitude: distance[]&gt; over &lt;duration[]&gt;;</code></li><li><strong>Bytecode action</strong>: <code>SET_SCREEN_SHAKE</code></li></ul><h2 id="assign-a-value" tabindex="-1">Assign a Value <a class="header-anchor" href="#assign-a-value" aria-label="Permalink to “Assign a Value”">​</a></h2><p>An <a href="./expressions_and_operators.html#assignment-operation">assignment operation</a> is a binary <a href="./expressions_and_operators.html">expression</a> that sets the left-hand side (LHS) to the value of the right-hand side (RHS).</p><p><strong>Syntax</strong>: <code>&lt;LHS&gt; = &lt;RHS&gt;;</code></p><h3 id="assign-int-value" tabindex="-1">Assign Int Value <a class="header-anchor" href="#assign-int-value" aria-label="Permalink to “Assign Int Value”">​</a></h3><p><strong>Syntax</strong>: <code>&lt;int setable[]&gt; = &lt;int expression[]&gt;</code>;</p><p>If the RHS and the LHS of any evaluated expansion are both bare identifiers, they will be handled as integer variables. To silence the ambiguity warning, use an &quot;invisible operation&quot; (e.g. <code>*1</code> or <code>+0</code>) to coerce the RHS to an int expression.</p><h4 id="int-setables" tabindex="-1">Int Setables <a class="header-anchor" href="#int-setables" aria-label="Permalink to “Int Setables”">​</a></h4><ul><li><a href="./identifiers.html">Variable identifiers</a> (<a href="./state.html#integer-variables">integers</a>)</li><li><a href="./arrays.html#assign-array-value-at-index">Array value at index</a></li><li><a href="./entities.html#entity-properties">Entity int properties</a>: <ul><li><code>&lt;entity identifier&gt; x</code></li><li><code>&lt;entity identifier&gt; y</code></li><li><code>&lt;entity identifier&gt; primary_id_type</code> (u8)</li><li><code>&lt;entity identifier&gt; primary_id</code></li><li><code>&lt;entity identifier&gt; secondary_id</code></li><li><code>&lt;entity identifier&gt; current_animation</code>(u8)</li><li><code>&lt;entity identifier&gt; animation_frame</code>(u8)</li><li><code>&lt;entity identifier&gt; strafe</code></li><li><strong>Entity identifier</strong>: see <a href="./identifiers.html#entity-identifier">Entity Identifier</a></li><li>See <a href="./entities.html#entity-properties">Entity Properties</a></li></ul></li></ul><p><strong>Bytecode actions</strong>:</p><ul><li><code>COPY_VARIABLE</code></li><li><code>MUTATE_VARIABLE</code></li><li><code>MUTATE_VARIABLES</code></li><li><code>ARRAY_WRITE_INTO_VARIABLE_INDEX_FROM_VALUE</code></li><li><code>ARRAY_WRITE_INTO_VARIABLE_INDEX_FROM_VARIABLE</code></li><li><code>SET_ENTITY_X</code></li><li><code>SET_ENTITY_Y</code></li><li><code>SET_ENTITY_PRIMARY_ID_TYPE</code></li><li><code>SET_ENTITY_PRIMARY_ID</code></li><li><code>SET_ENTITY_SECONDARY_ID</code></li><li><code>SET_ENTITY_CURRENT_ANIMATION</code></li><li><code>SET_ENTITY_CURRENT_FRAME</code></li><li><code>SET_ENTITY_MOVEMENT_RELATIVE</code></li></ul><h3 id="change-int-value" tabindex="-1">Change Int Value <a class="header-anchor" href="#change-int-value" aria-label="Permalink to “Change Int Value”">​</a></h3><p>Similar to <a href="#assign-int-value-it-assigns-a-value-to-an-int-setable">int setable</a>, but it also changes it by the operation in the &quot;op equals&quot; operator.</p><p>E.g. <code>var_name += 5;</code> is the same as <code>var_name = var_name + 5;</code>.</p><p>Note that relative entity turns cannot be made with <a href="./expressions_and_operators.html#int-expressions">int expressions</a>; these must take <a href="./primitive_types.html#number-literal">number literals</a>. See <a href="#assign-direction-value">Assign Direction Value</a> for turning an entity toward something specific on the map.</p><ul><li><strong>Syntax</strong>: <ul><li><code>&lt;entity identifier[]&gt; direction += &lt;number[]&gt;;</code></li><li><code>&lt;entity identifier[]&gt; direction -= &lt;number[]&gt;;</code></li><li><code>&lt;int setable[]&gt; &lt;op equals&gt; &lt;int expression[]&gt;;</code></li><li><strong>Entity identifier</strong>: see <a href="./identifiers.html#entity-identifier">Entity Identifier</a></li><li><strong>Int setable</strong>: see <a href="#int-setables-op-equals-add-subtract-multiply-divide-modulo-rng-roll-exclusive-int-expression-see-expressions-and-operatorsexpressions">Expressions</a></li></ul></li></ul><p><strong>Bytecode actions</strong>:</p><ul><li><code>SET_ENTITY_DIRECTION_RELATIVE</code></li><li><code>MUTATE_VARIABLE</code></li><li><code>MUTATE_VARIABLES</code></li></ul><h3 id="assign-bool-value" tabindex="-1">Assign Bool Value <a class="header-anchor" href="#assign-bool-value" aria-label="Permalink to “Assign Bool Value”">​</a></h3><p><strong>Syntax</strong>: <code>&lt;bool getable[]&gt; = &lt;bool expression[]&gt;;</code></p><p>Note: if the RHS and the LHS of any evaluated expansion are both bare identifiers, they will be handled as integer variables. To coerce the RHS to a bool expression, attach <code>!!</code> to the identifier in the RHS, or use the <code>flag</code> sigil to the LHS and/or the RHS identifier.</p><h4 id="bool-setables" tabindex="-1">Bool Setables <a class="header-anchor" href="#bool-setables" aria-label="Permalink to “Bool Setables”">​</a></h4><ul><li><a href="./primitive_types.html#boolean">Boolean literals</a> e.g. <code>true</code>, <code>false</code></li><li><a href="./identifiers.html">Variable identifiers</a> (<a href="./state.html#save-flags">flags</a>)</li><li><a href="./state.html#setable-engine-flags">Setable engine flags</a>: <ul><li><code>player_control</code></li><li>`lights_control</li><li>`hex_editor</li><li>`hex_dialog_mode</li><li>`hex_control</li><li>`hex_clipboard</li><li>`serial_control</li></ul></li><li><a href="./entities.html#entity-properties">Entity bool properties</a>: <ul><li><code>&lt;entity identifier&gt; glitched</code></li><li><strong>Entity identifier</strong>: see <a href="./identifiers.html#entity-identifier">Entity Identifier</a></li></ul></li><li>Light states <ul><li><code>light &lt;light name: string[]&gt;</code></li><li>See <a href="#light-names">light names</a></li></ul></li></ul><p><strong>Bytecode actions</strong>:</p><ul><li><code>SET_SAVE_FLAG</code></li><li><code>SET_PLAYER_CONTROL</code></li><li><code>SET_LIGHTS_CONTROL</code></li><li><code>SET_HEX_EDITOR_STATE</code></li><li><code>SET_HEX_EDITOR_DIALOG_MODE</code></li><li><code>SET_HEX_EDITOR_CONTROL</code></li><li><code>SET_HEX_EDITOR_CONTROL_CLIPBOARD</code></li><li><code>SET_SERIAL_DIALOG_CONTROL</code></li><li><code>SET_ENTITY_GLITCHED</code></li><li><code>SET_LIGHTS_STATE</code></li></ul><h3 id="assign-string-value" tabindex="-1">Assign String Value <a class="header-anchor" href="#assign-string-value" aria-label="Permalink to “Assign String Value”">​</a></h3><p><strong>Syntax</strong>: <code>&lt;string setable[]&gt; = &lt;string[]&gt;;</code></p><h4 id="string-setables" tabindex="-1">String Setables <a class="header-anchor" href="#string-setables" aria-label="Permalink to “String Setables”">​</a></h4><ul><li>The <a href="./state.html#warp-state-string">warp state string</a></li><li><code>serial_connect</code>: the default serial message printed upon game launch.</li><li><a href="./entities.html#entity-properties">Entity string properties</a>: <ul><li><code>&lt;entity identifier[]&gt; name</code></li><li><code>&lt;entity identifier[]&gt; type</code></li><li><code>&lt;entity identifier[]&gt; path</code></li><li><strong>Entity identifier</strong>: See <a href="./identifiers.html#entity-identifier">entity identifier</a></li></ul></li></ul><p><strong>Bytecode actions</strong>:</p><ul><li><code>SET_WARP_STATE</code></li><li><code>SET_CONNECT_SERIAL_DIALOG</code></li><li><code>SET_ENTITY_NAME</code></li><li><code>SET_ENTITY_TYPE</code></li><li>`SET_ENTITY_PATH</li></ul><h3 id="assign-script-value" tabindex="-1">Assign Script Value <a class="header-anchor" href="#assign-script-value" aria-label="Permalink to “Assign Script Value”">​</a></h3><p><strong>Syntax</strong>: <code>&lt;script setable[]&gt; &lt;script slot&gt; = &lt;script name: string[]&gt;;</code></p><h4 id="script-setables" tabindex="-1">Script Setables <a class="header-anchor" href="#script-setables" aria-label="Permalink to “Script Setables”">​</a></h4><ul><li><strong>Syntax</strong>: <ul><li><code>map</code></li><li><code>&lt;entity identifier&gt;</code> (See <a href="./identifiers.html#entity-identifier">Entity Identifier</a>)</li></ul></li><li><strong>Map script slots</strong>: <ul><li><code>on_tick</code></li><li><code>on_look</code></li></ul></li><li><strong>Entity script slots</strong>: <ul><li><code>on_interact</code></li><li><code>on_tick</code></li><li><code>on_look</code></li></ul></li></ul><p><strong>Bytecode actions</strong>:</p><ul><li><code>SET_MAP_TICK_SCRIPT</code></li><li><code>SET_MAP_LOOK_SCRIPT</code></li><li><code>SET_ENTITY_INTERACT_SCRIPT</code></li><li><code>SET_ENTITY_TICK_SCRIPT</code></li><li><code>SET_ENTITY_LOOK_SCRIPT</code></li></ul><h3 id="assign-direction-value" tabindex="-1">Assign Direction Value <a class="header-anchor" href="#assign-direction-value" aria-label="Permalink to “Assign Direction Value”">​</a></h3><p>Makes an <a href="./entities.html">entity</a> face the target. To make relative turns (e.g. 90º CCW) see <a href="#change-int-value-syntax-entity-identifier-direction-direction-target-entity-identifier-see-identifiersentity-identifier">Entity Identifier</a> - <strong>Direction target</strong>: - <code>&lt;geometry identifier&gt;</code> (See <a href="./identifiers.html#geometry-identifier">Geometry Identifier</a>) - <code>&lt;entity identifier&gt;</code> (See <a href="./identifiers.html#entity-identifier">Entity Identifier</a>) - <code>north</code>, <code>south</code>, <code>east</code>, or <code>west</code></p><ul><li><strong>Bytecode actions</strong>: <ul><li><code>SET_ENTITY_DIRECTION_TARGET_GEOMETRY</code></li><li><code>SET_ENTITY_DIRECTION_TARGET_ENTITY</code></li><li><code>SET_ENTITY_DIRECTION</code></li></ul></li></ul><h2 id="lights-control" tabindex="-1">Lights Control <a class="header-anchor" href="#lights-control" aria-label="Permalink to “Lights Control”">​</a></h2><ul><li>This includes all 8 bit lights underneath the screen and the 4 lights on either side of the screen.</li><li>Gaining control of the lights does not clear the light state; you will need to turn all the lights off yourself.</li><li>If you turn a light off and on again on the same game tick, the light will appear to flicker.</li></ul><h4 id="light-names" tabindex="-1">Light Names <a class="header-anchor" href="#light-names" aria-label="Permalink to “Light Names”">​</a></h4><ul><li><code>LED_XOR</code></li><li><code>LED_ADD</code></li><li><code>LED_SUB</code></li><li><code>LED_PAGE</code></li><li><code>LED_BIT128</code></li><li><code>LED_BIT64</code></li><li><code>LED_BIT32</code></li><li><code>LED_BIT16</code></li><li><code>LED_BIT8</code></li><li><code>LED_BIT4</code></li><li><code>LED_BIT2</code></li><li><code>LED_BIT1</code></li><li><code>LED_MEM0</code></li><li><code>LED_MEM1</code></li><li><code>LED_MEM2</code></li><li><code>LED_MEM3</code></li><li><code>LED_HAX</code> (capacitive touch button on the PCB)</li><li><code>LED_USB</code></li><li><code>LED_SD</code></li><li><code>LED_ALL</code> (will turn on/off all the lights)</li></ul><h2 id="other-actions" tabindex="-1">Other Actions <a class="header-anchor" href="#other-actions" aria-label="Permalink to “Other Actions”">​</a></h2><p>#todo put those in this file</p><ul><li><a href="./arrays.html#array-action-phrases">Array Action Phrases</a></li><li><a href="./commands.html#command-actions">commands</a></li></ul>',138)])])}const u=i(l,[["render",n]]);export{p as __pageData,u as default};
