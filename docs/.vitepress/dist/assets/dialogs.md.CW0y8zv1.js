import{_ as a,c as s,o as e,ah as t}from"./chunks/framework.l_r_SdPt.js";const c=JSON.parse('{"title":"Dialogs","description":"","frontmatter":{},"headers":[],"relativePath":"dialogs.md","filePath":"dialogs.md"}'),l={name:"dialogs.md"};function n(o,i,h,r,d,p){return e(),s("div",null,[...i[0]||(i[0]=[t(`<h1 id="dialogs" tabindex="-1">Dialogs <a class="header-anchor" href="#dialogs" aria-label="Permalink to “Dialogs”">​</a></h1><p><a href="./syntax_scopes.html#project-scope">Project scope</a>.</p><p>Dialogs are a visual novel or RPG-style dialog system for the screen. These include portrait images, dialog box labels, and dialog messages. The entire display is called a dialog card.</p><p>Dialogs do nothing on their own. To show them, you must use the <a href="./actions.html#show-dialog">Show Dialog</a> <a href="./actions.html">action</a> within a <a href="./scripts.html">script</a>.</p><p><a href="./scripts.html">Scripts</a> running a dialog cannot simultaneously perform other <a href="./actions.html">actions</a>. If an <a href="./entities.html">entity</a> must change their behavior partway through a dialog, you must split the dialog into multiple pieces and insert those actions between the pieces, or use another <a href="./scripts.html#script-slots">script slot</a> to control the entity&#39;s behavior.</p><h2 id="dialog-definition" tabindex="-1">Dialog Definition <a class="header-anchor" href="#dialog-definition" aria-label="Permalink to “Dialog Definition”">​</a></h2><p>Defined at <a href="./syntax_scopes.html#syntax-contexts">root level of the file</a>.</p><p><strong>Syntax</strong>: <code>dialog &lt;dialog name: string&gt; { &lt;dialog*&gt; }</code></p><h2 id="dialog-literal" tabindex="-1">Dialog Literal <a class="header-anchor" href="#dialog-literal" aria-label="Permalink to “Dialog Literal”">​</a></h2><p>Dialogs can be defined at the point of use with dialog literals. If a name is not provided, one will be generated based on the file name and line number.</p><ul><li><strong>Syntax</strong>: <ul><li><code>{ &lt;dialog*&gt; }</code></li><li><code>&lt;name: string&gt; { &lt;dialog*&gt; }</code></li></ul></li></ul><h2 id="dialog" tabindex="-1">Dialog <a class="header-anchor" href="#dialog" aria-label="Permalink to “Dialog”">​</a></h2><p>A dialog consists of the following items in this order:</p><ol><li><a href="#dialog-identifier">Dialog identifier</a>: 1+</li><li><a href="#dialog-parameter">Dialog parameter</a>: 0+</li><li><a href="#dialog-message">Dialog messages</a>: 1+</li><li><a href="#dialog-option">Dialog option</a>: 0-4</li></ol><h3 id="dialog-identifier" tabindex="-1">Dialog Identifier <a class="header-anchor" href="#dialog-identifier" aria-label="Permalink to “Dialog Identifier”">​</a></h3><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">dialog</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> sampleDialog</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99;">  SELF</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  alignment</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;"> BOTTOM_RIGHT</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  emote</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;"> 3</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Messages...&quot;</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;So many messages!&quot;</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Don&#39;t you think?&quot;</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Not really.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_1</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Definitely.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_2</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><p>The dialog identifier is the &quot;speaker&quot; of the dialog messages that immediately follow. For most cases, this will be a specific entity (with option #1 or #2 below), though you could also build up a dialog from its component pieces instead (with option #3).</p><p>The three options:</p><ol><li><code>&lt;bareword&gt;</code><ul><li>Refers to a dialog label (<a href="./primitive_types.html#bareword">bareword</a>) that has been defined with <a href="./dialog_and_serial_dialog_settings.html">dialog settings</a>. <ul><li>If no dialog label is found, it is assumed to be an entity name instead. This usage also provides the entity name as an <code>entity</code> parameter for the dialog.</li><li>Entity names with spaces or other special characters are not eligible for this usage.</li></ul></li></ul></li><li><code>entity &lt;string&gt;</code><ul><li>An entity&#39;s given name (i.e. the entity&#39;s name within the Tiled map).</li><li>This usage also provides the entity name as an <code>entity</code> parameter for the dialog.</li><li>The entities <code>%PLAYER%</code> and <code>%SELF%</code> must use this pattern (and not the bareword pattern) because they contain special characters. As this can be cumbersome, it&#39;s probably best to set up a <a href="./dialog_and_serial_dialog_settings.html">dialog settings</a> label for them so you can use a bareword as an identifier instead.</li></ul></li><li><code>name &lt;string&gt;</code><ul><li>The dialog&#39;s display name.</li><li>This usage also provides a <code>name</code> parameter for the dialog.</li><li>If you don&#39;t want a name displayed, use an empty quoted string (<code>name &quot;&quot;</code>).</li></ul></li></ol><h3 id="dialog-parameter" tabindex="-1">Dialog Parameter <a class="header-anchor" href="#dialog-parameter" aria-label="Permalink to “Dialog Parameter”">​</a></h3><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">dialog</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> sampleDialog</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99;">  SELF</span></span>
<span class="line highlighted"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  alignment</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;"> BOTTOM_RIGHT</span></span>
<span class="line highlighted"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  emote</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;"> 3</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Messages...&quot;</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;So many messages!&quot;</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Don&#39;t you think?&quot;</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Not really.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_1</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Definitely.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_2</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><p>A dialog parameter is a dialog property and value pair. Multiple dialog parameters can occur back-to-back in a single dialog block or a <a href="./dialog_and_serial_dialog_settings.html">dialog settings block</a>.</p><p><strong>Syntax</strong>:</p><ul><li><code>entity &lt;string&gt;</code><ul><li>The &quot;given name&quot; of the entity (i.e. the entity&#39;s name on the Tiled map). (Wrapping this name in <code>%</code>s is unnecessary and will in fact confuse the <a href="./encoder.html">encoder</a>.) <ul><li>Can be <code>%PLAYER%</code> or <code>%SELF%</code>.</li></ul></li><li>This property is supplied by the <a href="#dialog-identifier">dialog identifier</a> if it is an entity identifier.</li><li>Will automatically supply the <code>name</code> property, which is a relative reference; the dialog display label will be whatever that entity&#39;s name is at that moment.</li><li>Will automatically supply the <code>portrait</code> property if the referenced entity is a <a href="./entity_types.html#character-entity">character entity</a> and if there is a portrait defined for that entity in <code>entity_types.json</code>.</li></ul></li><li><code>name &lt;string&gt;</code><ul><li>This will be displayed as the label of the dialog card.</li><li>This property is supplied by the <a href="#dialog-identifier">dialog identifier</a> if it is a name identifier.</li><li>Overrides names inherited via the <code>entity</code> parameter.</li><li>This string is fixed (will not change if an entity name changes.) For an entity&#39;s current name instead, wrap a specific entity&#39;s given name in <code>%</code>s. <ul><li>Can be <code>%PLAYER%</code> or <code>%SELF%</code>.</li></ul></li><li>Should be no more than 12 ASCII characters.</li><li>If this string is empty (<code>name &quot;&quot;</code>), the dialog box label will be absent entirely.</li></ul></li><li><code>portrait &lt;string&gt;</code><ul><li>The name of a MGE portrait as defined in <code>portraits.json</code>.</li><li>Overrides portraits inherited via the <code>entity</code> parameter.</li><li>If not provided, the dialog card will not have a portrait box.</li></ul></li><li><code>alignment &lt;string&gt;</code><ul><li>Which half of the screen the dialog card will be placed, and which side of the screen the portrait image will be placed.</li><li><a href="./primitive_types.html#string">String</a>: one of the following: <ul><li><code>TR</code> or <code>TOP_RIGHT</code></li><li><code>BR</code> or <code>BOTTOM_RIGHT</code></li><li><code>TL</code> or <code>TOP_LEFT</code></li><li><code>BL</code> or <code>BOTTOM_LEFT</code> (default)</li></ul></li><li>In the Mage Game itself, we use <code>BR</code> for the player, and <code>BL</code> for everyone else. <code>TOP_</code> alignments are used sometimes instead when the dialog box position might interfere with choreography.</li></ul></li><li><code>border_tileset &lt;string&gt;</code><ul><li>Which tileset to use for the dialog card itself.</li><li>The <code>default</code> tileset defined in <code>scenario.json</code> is used if none is provided.</li></ul></li><li><code>emote &lt;number&gt;</code><ul><li>The nth &quot;emote&quot; in that entity&#39;s entry in <code>portraits.json</code>.</li><li>The first emote (<code>0</code>) will display if not specified.</li></ul></li><li><code>wrap &lt;number&gt;</code><ul><li>The number of chars to auto wrap the contents of dialog messages.</li><li>42 is default.</li></ul></li></ul><h3 id="dialog-message" tabindex="-1">Dialog Message <a class="header-anchor" href="#dialog-message" aria-label="Permalink to “Dialog Message”">​</a></h3><p>Each dialog message is a new dialog card in the game.</p><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">dialog</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> sampleDialog</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99;">  SELF</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  alignment</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;"> BOTTOM_RIGHT</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  emote</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;"> 3</span></span>
<span class="line highlighted"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Messages...&quot;</span></span>
<span class="line highlighted"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;So many messages!&quot;</span></span>
<span class="line highlighted"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Don&#39;t you think?&quot;</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Not really.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_1</span></span>
<span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Definitely.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_2</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><ul><li>Wrapped in quotes.</li><li>Only ASCII characters will be printed.</li><li>These strings are auto-wrapped and have other abilities and attributes, including variable value insertion and sanitization. See <a href="./dialog_and_serial_dialog_strings.html">Dialog and Serial Dialog Strings</a>.</li><li>If a message is wrapped to more than 5 lines, it will run off the bottom of the screen; it will not wrap to a new dialog card.</li><li>Best practice: wrap entity names in <code>%</code> when referring to them inside a dialog message. This way, the dialog message will reflect their current name (their name in RAM at that moment). See <a href="./dialog_and_serial_dialog_strings.html#print-entity-name">Print Entity Name</a>.</li></ul><h3 id="dialog-option" tabindex="-1">Dialog Option <a class="header-anchor" href="#dialog-option" aria-label="Permalink to “Dialog Option”">​</a></h3><div class="language-mgs"><button title="Copy Code" class="copy"></button><span class="lang">mgs</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;">dialog</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> sampleDialog</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4EC9B0;--shiki-light:#267F99;">  SELF</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  alignment</span><span style="--shiki-dark:#569CD6;--shiki-light:#0000FF;"> BOTTOM_RIGHT</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">  emote</span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;"> 3</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Messages...&quot;</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;So many messages!&quot;</span></span>
<span class="line"><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;">  &quot;Don&#39;t you think?&quot;</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Not really.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_1</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">  &gt;</span><span style="--shiki-dark:#CE9178;--shiki-light:#A31515;"> &quot;Definitely.&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> = </span><span style="--shiki-dark:#DCDCAA;--shiki-light:#795E26;">sample_script_2</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><ul><li><p><strong>Syntax</strong>:</p><ul><li><code>&gt; &lt;label: dialog string&gt; = &lt;script literal&gt;</code></li><li><code>&gt; &lt;label: dialog string&gt; = &lt;script: string[]&gt;</code></li></ul></li><li><p>You may have up to 4 dialog options per dialog.</p></li><li><p>Options result in mandatory script jumps.</p><ul><li>Dialogs after a dialog with options will go unseen, and actions afterward will go unexecuted.</li><li>Any script literals given as jump destinations will not fall through to the action after the dialog; they will just dead end as their own standalone script.</li></ul></li><li><p>The label is the text that will be shown to the player. As the cursor (approximated with <code>&gt;</code> in the syntax pattern) takes up some room, assume you will only have 39 characters instead of the usual 42.</p><ul><li>The label is a <a href="./dialog_and_serial_dialog_strings.html">dialog string</a>, meaning it behaves like <a href="#dialog-message">dialog messages</a> in terms of inserting variables (with <code>$</code> or <code>%</code>), escaped characters, etc.</li><li>Must be wrapped in quotes.</li></ul></li><li><p>In the MGE, dialog options are displayed underneath the final dialog message. Therefore, final dialog message (before any options) should consist of a single line of no more than 42 characters.</p></li></ul>`,31)])])}const k=a(l,[["render",n]]);export{c as __pageData,k as default};
